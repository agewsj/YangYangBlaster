// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rpc_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Msg {

  /// <summary>Holder for reflection information generated from rpc_service.proto</summary>
  public static partial class RpcServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for rpc_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RpcServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFycGNfc2VydmljZS5wcm90bxIDbXNnImAKGFJwY1NlcnZpY2VFeGFtcGxl",
            "UmVxdWVzdBIMCgRhcmcxGAEgASgFEgwKBGFyZzIYAiABKAISDAoEYXJnMxgD",
            "IAEoCRIMCgRhcmc0GAQgASgIEgwKBGFyZzUYBSADKAUiOAoWUnBjU2Vydmlj",
            "ZUV4YW1wbGVSZXBseRIeCgVlcnJvchgBIAEoDjIPLm1zZy5FUlJPUl9DT0RF",
            "IgcKBUVtcHR5IiMKEFB1c2hOb3RpZmljYXRpb24SDwoHcGF5bG9hZBgBIAEo",
            "CSK7AQoMTG9naW5SZXF1ZXN0Ei8KCWxvZ2luVHlwZRgBIAEoDjIcLm1zZy5M",
            "b2dpblJlcXVlc3QuTE9HSU5fVFlQRRIQCghsb2dpbktleRgCIAEoCRIPCgdp",
            "ZFRva2VuGAMgASgJEhAKCG5pY2tOYW1lGAQgASgJEg8KB3ZlcnNpb24YBSAB",
            "KAkiNAoKTE9HSU5fVFlQRRIMCghOT05fQ0VSVBAAEgoKBkdPT0dMRRABEgwK",
            "CEZBQ0VCT09LEAIicAoKTG9naW5SZXBseRIeCgVlcnJvchgBIAEoDjIPLm1z",
            "Zy5FUlJPUl9DT0RFEgsKA3VzbhgCIAEoBRIQCghuaWNrTmFtZRgDIAEoCRIQ",
            "Cghsb2dpbktleRgEIAEoCRIRCglhY2Nlc3NLZXkYBSABKAkidwoESXRlbRIQ",
            "CghpdGVtTmFtZRgBIAEoCRIgCghpdGVtVHlwZRgCIAEoDjIOLm1zZy5JVEVN",
            "X1RZUEUSKAoMaXRlbUNhdGVnb3J5GAMgASgOMhIubXNnLklURU1fQ0FURUdP",
            "UlkSEQoJaXRlbUNvdW50GAQgASgDIjoKCU1lcmNlbmFyeRIVCg1tZXJjZW5h",
            "cnlOYW1lGAEgASgJEhYKDm1lcmNlbmFyeUxldmVsGAIgASgFIi0KBVN0YWdl",
            "EhAKCHN0YWdlTnVtGAEgASgFEhIKCnN0YWdlU2NvcmUYAiABKAMihgEKDVVw",
            "Z3JhZGVQbGF5ZXISEgoKcG93ZXJMZXZlbBgBIAEoBRIYChBhdHRhY2tTcGVl",
            "ZExldmVsGAIgASgFEhUKDWNyaXRpY2FsTGV2ZWwYAyABKAUSGQoRYnVmZkR1",
            "cmF0aW9uTGV2ZWwYBCABKAUSFQoNZnJlZUNvaW5MZXZlbBgFIAEoBSIVChNM",
            "b2FkR2FtZURhdGFSZXF1ZXN0IrgBChFMb2FkR2FtZURhdGFSZXBseRIeCgVl",
            "cnJvchgBIAEoDjIPLm1zZy5FUlJPUl9DT0RFEhgKBWl0ZW1zGAIgAygLMgku",
            "bXNnLkl0ZW0SIwoLbWVyY2VuYXJpZXMYAyADKAsyDi5tc2cuTWVyY2VuYXJ5",
            "EhkKBXN0YWdlGAQgASgLMgoubXNnLlN0YWdlEikKDXVwZ3JhZGVQbGF5ZXIY",
            "BSABKAsyEi5tc2cuVXBncmFkZVBsYXllciKaAQoTU2F2ZUdhbWVEYXRhUmVx",
            "dWVzdBIYCgVpdGVtcxgCIAMoCzIJLm1zZy5JdGVtEiMKC21lcmNlbmFyaWVz",
            "GAMgAygLMg4ubXNnLk1lcmNlbmFyeRIZCgVzdGFnZRgEIAEoCzIKLm1zZy5T",
            "dGFnZRIpCg11cGdyYWRlUGxheWVyGAUgASgLMhIubXNnLlVwZ3JhZGVQbGF5",
            "ZXIiMwoRU2F2ZUdhbWVEYXRhUmVwbHkSHgoFZXJyb3IYASABKA4yDy5tc2cu",
            "RVJST1JfQ09ERSIfCg5SYW5raW5nUmVxdWVzdBINCgVzY29yZRgBIAEoAyIu",
            "CgxSYW5raW5nUmVwbHkSHgoFZXJyb3IYASABKA4yDy5tc2cuRVJST1JfQ09E",
            "RSIUChJSYW5raW5nTGlzdFJlcXVlc3QizwEKEFJhbmtpbmdMaXN0UmVwbHkS",
            "HgoFZXJyb3IYASABKA4yDy5tc2cuRVJST1JfQ09ERRIwCglteVJhbmtpbmcY",
            "AiABKAsyHS5tc2cuUmFua2luZ0xpc3RSZXBseS5SYW5raW5nEi8KCHJhbmtp",
            "bmdzGAMgAygLMh0ubXNnLlJhbmtpbmdMaXN0UmVwbHkuUmFua2luZxo4CgdS",
            "YW5raW5nEhAKCG5pY2tOYW1lGAEgASgJEgwKBHJhbmsYAiABKAUSDQoFc2Nv",
            "cmUYAyABKAUqzQQKCkVSUk9SX0NPREUSBgoCT0sQABISCg5FTVBUWV9OSUNL",
            "TkFNRRABEhAKDERVUF9OSUNLTkFNRRACEiQKIE5JQ0tOQU1FX0hBVkVfU1BF",
            "Q0lBTF9DSEFSQUNURVJTEAMSGQoVVU5BQkxFX1RPX0NSRUFURV9VU0VSEAQS",
            "FgoSRkFJTEVEX1RPX0dFVF9VU0VSEAUSFgoSR09PR0xFX0FVVEhfRkFJTEVE",
            "EAYSEgoORU1QVFlfSURfVE9LRU4QBxIeChpGQUlMRURfVE9fVVBEQVRFX0xP",
            "R0lOX0tFWRAIEh8KG0ZBSUxFRF9UT19DSEFOR0VfTE9HSU5fVFlQRRAJEhsK",
            "F0xPR0lOX1RZUEVfSVNfRElGRkVSRU5UEAoSGgoWQUNDRVNTX0tFWV9IQVNf",
            "RVhQSVJFRBALEgoKBlNZU1RNRRAMEhcKE0ZBSUxFRF9UT19TQVZFX0lURU0Q",
            "DRIcChhGQUlMRURfVE9fU0FWRV9NRVJDRU5BUlkQDhIYChRGQUlMRURfVE9f",
            "U0FWRV9TVEFHRRAPEiEKHUZBSUxFRF9UT19TQVZFX1VQR1JBREVfUExBWUVS",
            "EBASFwoTRkFJTEVEX1RPX0xPQURfSVRFTRAREhwKGEZBSUxFRF9UT19MT0FE",
            "X01FUkNFTkFSWRASEhgKFEZBSUxFRF9UT19MT0FEX1NUQUdFEBMSIQodRkFJ",
            "TEVEX1RPX0xPQURfVVBHUkFERV9QTEFZRVIQFBIeChpUSEVfVkVSU0lPTl9E",
            "T0VTX05PVF9NQVRDSBAVKrUBCglJVEVNX1RZUEUSCAoETk9ORRAAEgkKBEdP",
            "TEQQ6AcSCQoEUlVCWRDpBxIRCgxQSUVDRV9LTklHSFQQ6gcSEQoMUElFQ0Vf",
            "UElSQVRFEOsHEg8KClBJRUNFX1NUQVIQ7AcSFAoPUElFQ0VfU0NJRU5USVNU",
            "EO0HEhIKDVBJRUNFX1NUVURFTlQQ7gcSEQoMUElFQ0VfQ09XQk9ZEO8HEhQK",
            "D1BJRUNFX0ZJU0hFUk1BThDwByopCg1JVEVNX0NBVEVHT1JZEgoKBk5PUk1B",
            "TBAAEgwKCENVUlJFTkNZEAFCB1oFLjttc2diBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Msg.ERROR_CODE), typeof(global::Msg.ITEM_TYPE), typeof(global::Msg.ITEM_CATEGORY), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.RpcServiceExampleRequest), global::Msg.RpcServiceExampleRequest.Parser, new[]{ "Arg1", "Arg2", "Arg3", "Arg4", "Arg5" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.RpcServiceExampleReply), global::Msg.RpcServiceExampleReply.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.Empty), global::Msg.Empty.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.PushNotification), global::Msg.PushNotification.Parser, new[]{ "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.LoginRequest), global::Msg.LoginRequest.Parser, new[]{ "LoginType", "LoginKey", "IdToken", "NickName", "Version" }, null, new[]{ typeof(global::Msg.LoginRequest.Types.LOGIN_TYPE) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.LoginReply), global::Msg.LoginReply.Parser, new[]{ "Error", "Usn", "NickName", "LoginKey", "AccessKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.Item), global::Msg.Item.Parser, new[]{ "ItemName", "ItemType", "ItemCategory", "ItemCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.Mercenary), global::Msg.Mercenary.Parser, new[]{ "MercenaryName", "MercenaryLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.Stage), global::Msg.Stage.Parser, new[]{ "StageNum", "StageScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UpgradePlayer), global::Msg.UpgradePlayer.Parser, new[]{ "PowerLevel", "AttackSpeedLevel", "CriticalLevel", "BuffDurationLevel", "FreeCoinLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.LoadGameDataRequest), global::Msg.LoadGameDataRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.LoadGameDataReply), global::Msg.LoadGameDataReply.Parser, new[]{ "Error", "Items", "Mercenaries", "Stage", "UpgradePlayer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.SaveGameDataRequest), global::Msg.SaveGameDataRequest.Parser, new[]{ "Items", "Mercenaries", "Stage", "UpgradePlayer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.SaveGameDataReply), global::Msg.SaveGameDataReply.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.RankingRequest), global::Msg.RankingRequest.Parser, new[]{ "Score" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.RankingReply), global::Msg.RankingReply.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.RankingListRequest), global::Msg.RankingListRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.RankingListReply), global::Msg.RankingListReply.Parser, new[]{ "Error", "MyRanking", "Rankings" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Msg.RankingListReply.Types.Ranking), global::Msg.RankingListReply.Types.Ranking.Parser, new[]{ "NickName", "Rank", "Score" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  public enum ERROR_CODE {
    [pbr::OriginalName("OK")] Ok = 0,
    [pbr::OriginalName("EMPTY_NICKNAME")] EmptyNickname = 1,
    [pbr::OriginalName("DUP_NICKNAME")] DupNickname = 2,
    [pbr::OriginalName("NICKNAME_HAVE_SPECIAL_CHARACTERS")] NicknameHaveSpecialCharacters = 3,
    [pbr::OriginalName("UNABLE_TO_CREATE_USER")] UnableToCreateUser = 4,
    [pbr::OriginalName("FAILED_TO_GET_USER")] FailedToGetUser = 5,
    [pbr::OriginalName("GOOGLE_AUTH_FAILED")] GoogleAuthFailed = 6,
    [pbr::OriginalName("EMPTY_ID_TOKEN")] EmptyIdToken = 7,
    [pbr::OriginalName("FAILED_TO_UPDATE_LOGIN_KEY")] FailedToUpdateLoginKey = 8,
    [pbr::OriginalName("FAILED_TO_CHANGE_LOGIN_TYPE")] FailedToChangeLoginType = 9,
    [pbr::OriginalName("LOGIN_TYPE_IS_DIFFERENT")] LoginTypeIsDifferent = 10,
    [pbr::OriginalName("ACCESS_KEY_HAS_EXPIRED")] AccessKeyHasExpired = 11,
    [pbr::OriginalName("SYSTME")] Systme = 12,
    [pbr::OriginalName("FAILED_TO_SAVE_ITEM")] FailedToSaveItem = 13,
    [pbr::OriginalName("FAILED_TO_SAVE_MERCENARY")] FailedToSaveMercenary = 14,
    [pbr::OriginalName("FAILED_TO_SAVE_STAGE")] FailedToSaveStage = 15,
    [pbr::OriginalName("FAILED_TO_SAVE_UPGRADE_PLAYER")] FailedToSaveUpgradePlayer = 16,
    [pbr::OriginalName("FAILED_TO_LOAD_ITEM")] FailedToLoadItem = 17,
    [pbr::OriginalName("FAILED_TO_LOAD_MERCENARY")] FailedToLoadMercenary = 18,
    [pbr::OriginalName("FAILED_TO_LOAD_STAGE")] FailedToLoadStage = 19,
    [pbr::OriginalName("FAILED_TO_LOAD_UPGRADE_PLAYER")] FailedToLoadUpgradePlayer = 20,
    [pbr::OriginalName("THE_VERSION_DOES_NOT_MATCH")] TheVersionDoesNotMatch = 21,
  }

  public enum ITEM_TYPE {
    [pbr::OriginalName("NONE")] None = 0,
    [pbr::OriginalName("GOLD")] Gold = 1000,
    [pbr::OriginalName("RUBY")] Ruby = 1001,
    [pbr::OriginalName("PIECE_KNIGHT")] PieceKnight = 1002,
    [pbr::OriginalName("PIECE_PIRATE")] PiecePirate = 1003,
    [pbr::OriginalName("PIECE_STAR")] PieceStar = 1004,
    [pbr::OriginalName("PIECE_SCIENTIST")] PieceScientist = 1005,
    [pbr::OriginalName("PIECE_STUDENT")] PieceStudent = 1006,
    [pbr::OriginalName("PIECE_COWBOY")] PieceCowboy = 1007,
    [pbr::OriginalName("PIECE_FISHERMAN")] PieceFisherman = 1008,
  }

  public enum ITEM_CATEGORY {
    [pbr::OriginalName("NORMAL")] Normal = 0,
    [pbr::OriginalName("CURRENCY")] Currency = 1,
  }

  #endregion

  #region Messages
  public sealed partial class RpcServiceExampleRequest : pb::IMessage<RpcServiceExampleRequest> {
    private static readonly pb::MessageParser<RpcServiceExampleRequest> _parser = new pb::MessageParser<RpcServiceExampleRequest>(() => new RpcServiceExampleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcServiceExampleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcServiceExampleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcServiceExampleRequest(RpcServiceExampleRequest other) : this() {
      arg1_ = other.arg1_;
      arg2_ = other.arg2_;
      arg3_ = other.arg3_;
      arg4_ = other.arg4_;
      arg5_ = other.arg5_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcServiceExampleRequest Clone() {
      return new RpcServiceExampleRequest(this);
    }

    /// <summary>Field number for the "arg1" field.</summary>
    public const int Arg1FieldNumber = 1;
    private int arg1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Arg1 {
      get { return arg1_; }
      set {
        arg1_ = value;
      }
    }

    /// <summary>Field number for the "arg2" field.</summary>
    public const int Arg2FieldNumber = 2;
    private float arg2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Arg2 {
      get { return arg2_; }
      set {
        arg2_ = value;
      }
    }

    /// <summary>Field number for the "arg3" field.</summary>
    public const int Arg3FieldNumber = 3;
    private string arg3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Arg3 {
      get { return arg3_; }
      set {
        arg3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "arg4" field.</summary>
    public const int Arg4FieldNumber = 4;
    private bool arg4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Arg4 {
      get { return arg4_; }
      set {
        arg4_ = value;
      }
    }

    /// <summary>Field number for the "arg5" field.</summary>
    public const int Arg5FieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_arg5_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> arg5_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Arg5 {
      get { return arg5_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcServiceExampleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcServiceExampleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Arg1 != other.Arg1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Arg2, other.Arg2)) return false;
      if (Arg3 != other.Arg3) return false;
      if (Arg4 != other.Arg4) return false;
      if(!arg5_.Equals(other.arg5_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Arg1 != 0) hash ^= Arg1.GetHashCode();
      if (Arg2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Arg2);
      if (Arg3.Length != 0) hash ^= Arg3.GetHashCode();
      if (Arg4 != false) hash ^= Arg4.GetHashCode();
      hash ^= arg5_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Arg1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Arg1);
      }
      if (Arg2 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Arg2);
      }
      if (Arg3.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Arg3);
      }
      if (Arg4 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Arg4);
      }
      arg5_.WriteTo(output, _repeated_arg5_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Arg1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Arg1);
      }
      if (Arg2 != 0F) {
        size += 1 + 4;
      }
      if (Arg3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Arg3);
      }
      if (Arg4 != false) {
        size += 1 + 1;
      }
      size += arg5_.CalculateSize(_repeated_arg5_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcServiceExampleRequest other) {
      if (other == null) {
        return;
      }
      if (other.Arg1 != 0) {
        Arg1 = other.Arg1;
      }
      if (other.Arg2 != 0F) {
        Arg2 = other.Arg2;
      }
      if (other.Arg3.Length != 0) {
        Arg3 = other.Arg3;
      }
      if (other.Arg4 != false) {
        Arg4 = other.Arg4;
      }
      arg5_.Add(other.arg5_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Arg1 = input.ReadInt32();
            break;
          }
          case 21: {
            Arg2 = input.ReadFloat();
            break;
          }
          case 26: {
            Arg3 = input.ReadString();
            break;
          }
          case 32: {
            Arg4 = input.ReadBool();
            break;
          }
          case 42:
          case 40: {
            arg5_.AddEntriesFrom(input, _repeated_arg5_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RpcServiceExampleReply : pb::IMessage<RpcServiceExampleReply> {
    private static readonly pb::MessageParser<RpcServiceExampleReply> _parser = new pb::MessageParser<RpcServiceExampleReply>(() => new RpcServiceExampleReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcServiceExampleReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcServiceExampleReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcServiceExampleReply(RpcServiceExampleReply other) : this() {
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcServiceExampleReply Clone() {
      return new RpcServiceExampleReply(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Msg.ERROR_CODE error_ = global::Msg.ERROR_CODE.Ok;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ERROR_CODE Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcServiceExampleReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcServiceExampleReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error != global::Msg.ERROR_CODE.Ok) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error != global::Msg.ERROR_CODE.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error != global::Msg.ERROR_CODE.Ok) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcServiceExampleReply other) {
      if (other == null) {
        return;
      }
      if (other.Error != global::Msg.ERROR_CODE.Ok) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Error = (global::Msg.ERROR_CODE) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class PushNotification : pb::IMessage<PushNotification> {
    private static readonly pb::MessageParser<PushNotification> _parser = new pb::MessageParser<PushNotification>(() => new PushNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PushNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushNotification(PushNotification other) : this() {
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushNotification Clone() {
      return new PushNotification(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private string payload_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PushNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PushNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Payload.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PushNotification other) {
      if (other == null) {
        return;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Payload = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      loginType_ = other.loginType_;
      loginKey_ = other.loginKey_;
      idToken_ = other.idToken_;
      nickName_ = other.nickName_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "loginType" field.</summary>
    public const int LoginTypeFieldNumber = 1;
    private global::Msg.LoginRequest.Types.LOGIN_TYPE loginType_ = global::Msg.LoginRequest.Types.LOGIN_TYPE.NonCert;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.LoginRequest.Types.LOGIN_TYPE LoginType {
      get { return loginType_; }
      set {
        loginType_ = value;
      }
    }

    /// <summary>Field number for the "loginKey" field.</summary>
    public const int LoginKeyFieldNumber = 2;
    private string loginKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoginKey {
      get { return loginKey_; }
      set {
        loginKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idToken" field.</summary>
    public const int IdTokenFieldNumber = 3;
    private string idToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdToken {
      get { return idToken_; }
      set {
        idToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickName" field.</summary>
    public const int NickNameFieldNumber = 4;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 5;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LoginType != other.LoginType) return false;
      if (LoginKey != other.LoginKey) return false;
      if (IdToken != other.IdToken) return false;
      if (NickName != other.NickName) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LoginType != global::Msg.LoginRequest.Types.LOGIN_TYPE.NonCert) hash ^= LoginType.GetHashCode();
      if (LoginKey.Length != 0) hash ^= LoginKey.GetHashCode();
      if (IdToken.Length != 0) hash ^= IdToken.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LoginType != global::Msg.LoginRequest.Types.LOGIN_TYPE.NonCert) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LoginType);
      }
      if (LoginKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LoginKey);
      }
      if (IdToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IdToken);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NickName);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LoginType != global::Msg.LoginRequest.Types.LOGIN_TYPE.NonCert) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LoginType);
      }
      if (LoginKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoginKey);
      }
      if (IdToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdToken);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.LoginType != global::Msg.LoginRequest.Types.LOGIN_TYPE.NonCert) {
        LoginType = other.LoginType;
      }
      if (other.LoginKey.Length != 0) {
        LoginKey = other.LoginKey;
      }
      if (other.IdToken.Length != 0) {
        IdToken = other.IdToken;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LoginType = (global::Msg.LoginRequest.Types.LOGIN_TYPE) input.ReadEnum();
            break;
          }
          case 18: {
            LoginKey = input.ReadString();
            break;
          }
          case 26: {
            IdToken = input.ReadString();
            break;
          }
          case 34: {
            NickName = input.ReadString();
            break;
          }
          case 42: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the LoginRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum LOGIN_TYPE {
        [pbr::OriginalName("NON_CERT")] NonCert = 0,
        [pbr::OriginalName("GOOGLE")] Google = 1,
        [pbr::OriginalName("FACEBOOK")] Facebook = 2,
      }

    }
    #endregion

  }

  public sealed partial class LoginReply : pb::IMessage<LoginReply> {
    private static readonly pb::MessageParser<LoginReply> _parser = new pb::MessageParser<LoginReply>(() => new LoginReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply(LoginReply other) : this() {
      error_ = other.error_;
      usn_ = other.usn_;
      nickName_ = other.nickName_;
      loginKey_ = other.loginKey_;
      accessKey_ = other.accessKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply Clone() {
      return new LoginReply(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Msg.ERROR_CODE error_ = global::Msg.ERROR_CODE.Ok;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ERROR_CODE Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "usn" field.</summary>
    public const int UsnFieldNumber = 2;
    private int usn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Usn {
      get { return usn_; }
      set {
        usn_ = value;
      }
    }

    /// <summary>Field number for the "nickName" field.</summary>
    public const int NickNameFieldNumber = 3;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "loginKey" field.</summary>
    public const int LoginKeyFieldNumber = 4;
    private string loginKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoginKey {
      get { return loginKey_; }
      set {
        loginKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accessKey" field.</summary>
    public const int AccessKeyFieldNumber = 5;
    private string accessKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessKey {
      get { return accessKey_; }
      set {
        accessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      if (Usn != other.Usn) return false;
      if (NickName != other.NickName) return false;
      if (LoginKey != other.LoginKey) return false;
      if (AccessKey != other.AccessKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error != global::Msg.ERROR_CODE.Ok) hash ^= Error.GetHashCode();
      if (Usn != 0) hash ^= Usn.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (LoginKey.Length != 0) hash ^= LoginKey.GetHashCode();
      if (AccessKey.Length != 0) hash ^= AccessKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error != global::Msg.ERROR_CODE.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Error);
      }
      if (Usn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Usn);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NickName);
      }
      if (LoginKey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LoginKey);
      }
      if (AccessKey.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AccessKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error != global::Msg.ERROR_CODE.Ok) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (Usn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Usn);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (LoginKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoginKey);
      }
      if (AccessKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginReply other) {
      if (other == null) {
        return;
      }
      if (other.Error != global::Msg.ERROR_CODE.Ok) {
        Error = other.Error;
      }
      if (other.Usn != 0) {
        Usn = other.Usn;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.LoginKey.Length != 0) {
        LoginKey = other.LoginKey;
      }
      if (other.AccessKey.Length != 0) {
        AccessKey = other.AccessKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Error = (global::Msg.ERROR_CODE) input.ReadEnum();
            break;
          }
          case 16: {
            Usn = input.ReadInt32();
            break;
          }
          case 26: {
            NickName = input.ReadString();
            break;
          }
          case 34: {
            LoginKey = input.ReadString();
            break;
          }
          case 42: {
            AccessKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Item : pb::IMessage<Item> {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item(Item other) : this() {
      itemName_ = other.itemName_;
      itemType_ = other.itemType_;
      itemCategory_ = other.itemCategory_;
      itemCount_ = other.itemCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "itemName" field.</summary>
    public const int ItemNameFieldNumber = 1;
    private string itemName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ItemName {
      get { return itemName_; }
      set {
        itemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "itemType" field.</summary>
    public const int ItemTypeFieldNumber = 2;
    private global::Msg.ITEM_TYPE itemType_ = global::Msg.ITEM_TYPE.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ITEM_TYPE ItemType {
      get { return itemType_; }
      set {
        itemType_ = value;
      }
    }

    /// <summary>Field number for the "itemCategory" field.</summary>
    public const int ItemCategoryFieldNumber = 3;
    private global::Msg.ITEM_CATEGORY itemCategory_ = global::Msg.ITEM_CATEGORY.Normal;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ITEM_CATEGORY ItemCategory {
      get { return itemCategory_; }
      set {
        itemCategory_ = value;
      }
    }

    /// <summary>Field number for the "itemCount" field.</summary>
    public const int ItemCountFieldNumber = 4;
    private long itemCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ItemCount {
      get { return itemCount_; }
      set {
        itemCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemName != other.ItemName) return false;
      if (ItemType != other.ItemType) return false;
      if (ItemCategory != other.ItemCategory) return false;
      if (ItemCount != other.ItemCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemName.Length != 0) hash ^= ItemName.GetHashCode();
      if (ItemType != global::Msg.ITEM_TYPE.None) hash ^= ItemType.GetHashCode();
      if (ItemCategory != global::Msg.ITEM_CATEGORY.Normal) hash ^= ItemCategory.GetHashCode();
      if (ItemCount != 0L) hash ^= ItemCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ItemName);
      }
      if (ItemType != global::Msg.ITEM_TYPE.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ItemType);
      }
      if (ItemCategory != global::Msg.ITEM_CATEGORY.Normal) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ItemCategory);
      }
      if (ItemCount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ItemCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemName);
      }
      if (ItemType != global::Msg.ITEM_TYPE.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ItemType);
      }
      if (ItemCategory != global::Msg.ITEM_CATEGORY.Normal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ItemCategory);
      }
      if (ItemCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ItemCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.ItemName.Length != 0) {
        ItemName = other.ItemName;
      }
      if (other.ItemType != global::Msg.ITEM_TYPE.None) {
        ItemType = other.ItemType;
      }
      if (other.ItemCategory != global::Msg.ITEM_CATEGORY.Normal) {
        ItemCategory = other.ItemCategory;
      }
      if (other.ItemCount != 0L) {
        ItemCount = other.ItemCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ItemName = input.ReadString();
            break;
          }
          case 16: {
            ItemType = (global::Msg.ITEM_TYPE) input.ReadEnum();
            break;
          }
          case 24: {
            ItemCategory = (global::Msg.ITEM_CATEGORY) input.ReadEnum();
            break;
          }
          case 32: {
            ItemCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Mercenary : pb::IMessage<Mercenary> {
    private static readonly pb::MessageParser<Mercenary> _parser = new pb::MessageParser<Mercenary>(() => new Mercenary());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Mercenary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mercenary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mercenary(Mercenary other) : this() {
      mercenaryName_ = other.mercenaryName_;
      mercenaryLevel_ = other.mercenaryLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mercenary Clone() {
      return new Mercenary(this);
    }

    /// <summary>Field number for the "mercenaryName" field.</summary>
    public const int MercenaryNameFieldNumber = 1;
    private string mercenaryName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MercenaryName {
      get { return mercenaryName_; }
      set {
        mercenaryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mercenaryLevel" field.</summary>
    public const int MercenaryLevelFieldNumber = 2;
    private int mercenaryLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MercenaryLevel {
      get { return mercenaryLevel_; }
      set {
        mercenaryLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Mercenary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Mercenary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MercenaryName != other.MercenaryName) return false;
      if (MercenaryLevel != other.MercenaryLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MercenaryName.Length != 0) hash ^= MercenaryName.GetHashCode();
      if (MercenaryLevel != 0) hash ^= MercenaryLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MercenaryName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MercenaryName);
      }
      if (MercenaryLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MercenaryLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MercenaryName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MercenaryName);
      }
      if (MercenaryLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MercenaryLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Mercenary other) {
      if (other == null) {
        return;
      }
      if (other.MercenaryName.Length != 0) {
        MercenaryName = other.MercenaryName;
      }
      if (other.MercenaryLevel != 0) {
        MercenaryLevel = other.MercenaryLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MercenaryName = input.ReadString();
            break;
          }
          case 16: {
            MercenaryLevel = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Stage : pb::IMessage<Stage> {
    private static readonly pb::MessageParser<Stage> _parser = new pb::MessageParser<Stage>(() => new Stage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Stage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stage(Stage other) : this() {
      stageNum_ = other.stageNum_;
      stageScore_ = other.stageScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stage Clone() {
      return new Stage(this);
    }

    /// <summary>Field number for the "stageNum" field.</summary>
    public const int StageNumFieldNumber = 1;
    private int stageNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StageNum {
      get { return stageNum_; }
      set {
        stageNum_ = value;
      }
    }

    /// <summary>Field number for the "stageScore" field.</summary>
    public const int StageScoreFieldNumber = 2;
    private long stageScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StageScore {
      get { return stageScore_; }
      set {
        stageScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Stage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Stage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StageNum != other.StageNum) return false;
      if (StageScore != other.StageScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StageNum != 0) hash ^= StageNum.GetHashCode();
      if (StageScore != 0L) hash ^= StageScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StageNum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StageNum);
      }
      if (StageScore != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StageScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StageNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageNum);
      }
      if (StageScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StageScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Stage other) {
      if (other == null) {
        return;
      }
      if (other.StageNum != 0) {
        StageNum = other.StageNum;
      }
      if (other.StageScore != 0L) {
        StageScore = other.StageScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StageNum = input.ReadInt32();
            break;
          }
          case 16: {
            StageScore = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpgradePlayer : pb::IMessage<UpgradePlayer> {
    private static readonly pb::MessageParser<UpgradePlayer> _parser = new pb::MessageParser<UpgradePlayer>(() => new UpgradePlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpgradePlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradePlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradePlayer(UpgradePlayer other) : this() {
      powerLevel_ = other.powerLevel_;
      attackSpeedLevel_ = other.attackSpeedLevel_;
      criticalLevel_ = other.criticalLevel_;
      buffDurationLevel_ = other.buffDurationLevel_;
      freeCoinLevel_ = other.freeCoinLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradePlayer Clone() {
      return new UpgradePlayer(this);
    }

    /// <summary>Field number for the "powerLevel" field.</summary>
    public const int PowerLevelFieldNumber = 1;
    private int powerLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PowerLevel {
      get { return powerLevel_; }
      set {
        powerLevel_ = value;
      }
    }

    /// <summary>Field number for the "attackSpeedLevel" field.</summary>
    public const int AttackSpeedLevelFieldNumber = 2;
    private int attackSpeedLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttackSpeedLevel {
      get { return attackSpeedLevel_; }
      set {
        attackSpeedLevel_ = value;
      }
    }

    /// <summary>Field number for the "criticalLevel" field.</summary>
    public const int CriticalLevelFieldNumber = 3;
    private int criticalLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CriticalLevel {
      get { return criticalLevel_; }
      set {
        criticalLevel_ = value;
      }
    }

    /// <summary>Field number for the "buffDurationLevel" field.</summary>
    public const int BuffDurationLevelFieldNumber = 4;
    private int buffDurationLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuffDurationLevel {
      get { return buffDurationLevel_; }
      set {
        buffDurationLevel_ = value;
      }
    }

    /// <summary>Field number for the "freeCoinLevel" field.</summary>
    public const int FreeCoinLevelFieldNumber = 5;
    private int freeCoinLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreeCoinLevel {
      get { return freeCoinLevel_; }
      set {
        freeCoinLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpgradePlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpgradePlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PowerLevel != other.PowerLevel) return false;
      if (AttackSpeedLevel != other.AttackSpeedLevel) return false;
      if (CriticalLevel != other.CriticalLevel) return false;
      if (BuffDurationLevel != other.BuffDurationLevel) return false;
      if (FreeCoinLevel != other.FreeCoinLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PowerLevel != 0) hash ^= PowerLevel.GetHashCode();
      if (AttackSpeedLevel != 0) hash ^= AttackSpeedLevel.GetHashCode();
      if (CriticalLevel != 0) hash ^= CriticalLevel.GetHashCode();
      if (BuffDurationLevel != 0) hash ^= BuffDurationLevel.GetHashCode();
      if (FreeCoinLevel != 0) hash ^= FreeCoinLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PowerLevel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PowerLevel);
      }
      if (AttackSpeedLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AttackSpeedLevel);
      }
      if (CriticalLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CriticalLevel);
      }
      if (BuffDurationLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BuffDurationLevel);
      }
      if (FreeCoinLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FreeCoinLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PowerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PowerLevel);
      }
      if (AttackSpeedLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackSpeedLevel);
      }
      if (CriticalLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CriticalLevel);
      }
      if (BuffDurationLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffDurationLevel);
      }
      if (FreeCoinLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeCoinLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpgradePlayer other) {
      if (other == null) {
        return;
      }
      if (other.PowerLevel != 0) {
        PowerLevel = other.PowerLevel;
      }
      if (other.AttackSpeedLevel != 0) {
        AttackSpeedLevel = other.AttackSpeedLevel;
      }
      if (other.CriticalLevel != 0) {
        CriticalLevel = other.CriticalLevel;
      }
      if (other.BuffDurationLevel != 0) {
        BuffDurationLevel = other.BuffDurationLevel;
      }
      if (other.FreeCoinLevel != 0) {
        FreeCoinLevel = other.FreeCoinLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PowerLevel = input.ReadInt32();
            break;
          }
          case 16: {
            AttackSpeedLevel = input.ReadInt32();
            break;
          }
          case 24: {
            CriticalLevel = input.ReadInt32();
            break;
          }
          case 32: {
            BuffDurationLevel = input.ReadInt32();
            break;
          }
          case 40: {
            FreeCoinLevel = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoadGameDataRequest : pb::IMessage<LoadGameDataRequest> {
    private static readonly pb::MessageParser<LoadGameDataRequest> _parser = new pb::MessageParser<LoadGameDataRequest>(() => new LoadGameDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadGameDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadGameDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadGameDataRequest(LoadGameDataRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadGameDataRequest Clone() {
      return new LoadGameDataRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadGameDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadGameDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadGameDataRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class LoadGameDataReply : pb::IMessage<LoadGameDataReply> {
    private static readonly pb::MessageParser<LoadGameDataReply> _parser = new pb::MessageParser<LoadGameDataReply>(() => new LoadGameDataReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadGameDataReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadGameDataReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadGameDataReply(LoadGameDataReply other) : this() {
      error_ = other.error_;
      items_ = other.items_.Clone();
      mercenaries_ = other.mercenaries_.Clone();
      stage_ = other.stage_ != null ? other.stage_.Clone() : null;
      upgradePlayer_ = other.upgradePlayer_ != null ? other.upgradePlayer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadGameDataReply Clone() {
      return new LoadGameDataReply(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Msg.ERROR_CODE error_ = global::Msg.ERROR_CODE.Ok;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ERROR_CODE Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.Item> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.Item.Parser);
    private readonly pbc::RepeatedField<global::Msg.Item> items_ = new pbc::RepeatedField<global::Msg.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.Item> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "mercenaries" field.</summary>
    public const int MercenariesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.Mercenary> _repeated_mercenaries_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.Mercenary.Parser);
    private readonly pbc::RepeatedField<global::Msg.Mercenary> mercenaries_ = new pbc::RepeatedField<global::Msg.Mercenary>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.Mercenary> Mercenaries {
      get { return mercenaries_; }
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 4;
    private global::Msg.Stage stage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Stage Stage {
      get { return stage_; }
      set {
        stage_ = value;
      }
    }

    /// <summary>Field number for the "upgradePlayer" field.</summary>
    public const int UpgradePlayerFieldNumber = 5;
    private global::Msg.UpgradePlayer upgradePlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.UpgradePlayer UpgradePlayer {
      get { return upgradePlayer_; }
      set {
        upgradePlayer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadGameDataReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadGameDataReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      if(!items_.Equals(other.items_)) return false;
      if(!mercenaries_.Equals(other.mercenaries_)) return false;
      if (!object.Equals(Stage, other.Stage)) return false;
      if (!object.Equals(UpgradePlayer, other.UpgradePlayer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error != global::Msg.ERROR_CODE.Ok) hash ^= Error.GetHashCode();
      hash ^= items_.GetHashCode();
      hash ^= mercenaries_.GetHashCode();
      if (stage_ != null) hash ^= Stage.GetHashCode();
      if (upgradePlayer_ != null) hash ^= UpgradePlayer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error != global::Msg.ERROR_CODE.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Error);
      }
      items_.WriteTo(output, _repeated_items_codec);
      mercenaries_.WriteTo(output, _repeated_mercenaries_codec);
      if (stage_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Stage);
      }
      if (upgradePlayer_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UpgradePlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error != global::Msg.ERROR_CODE.Ok) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      size += mercenaries_.CalculateSize(_repeated_mercenaries_codec);
      if (stage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stage);
      }
      if (upgradePlayer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpgradePlayer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadGameDataReply other) {
      if (other == null) {
        return;
      }
      if (other.Error != global::Msg.ERROR_CODE.Ok) {
        Error = other.Error;
      }
      items_.Add(other.items_);
      mercenaries_.Add(other.mercenaries_);
      if (other.stage_ != null) {
        if (stage_ == null) {
          Stage = new global::Msg.Stage();
        }
        Stage.MergeFrom(other.Stage);
      }
      if (other.upgradePlayer_ != null) {
        if (upgradePlayer_ == null) {
          UpgradePlayer = new global::Msg.UpgradePlayer();
        }
        UpgradePlayer.MergeFrom(other.UpgradePlayer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Error = (global::Msg.ERROR_CODE) input.ReadEnum();
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 26: {
            mercenaries_.AddEntriesFrom(input, _repeated_mercenaries_codec);
            break;
          }
          case 34: {
            if (stage_ == null) {
              Stage = new global::Msg.Stage();
            }
            input.ReadMessage(Stage);
            break;
          }
          case 42: {
            if (upgradePlayer_ == null) {
              UpgradePlayer = new global::Msg.UpgradePlayer();
            }
            input.ReadMessage(UpgradePlayer);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SaveGameDataRequest : pb::IMessage<SaveGameDataRequest> {
    private static readonly pb::MessageParser<SaveGameDataRequest> _parser = new pb::MessageParser<SaveGameDataRequest>(() => new SaveGameDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveGameDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveGameDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveGameDataRequest(SaveGameDataRequest other) : this() {
      items_ = other.items_.Clone();
      mercenaries_ = other.mercenaries_.Clone();
      stage_ = other.stage_ != null ? other.stage_.Clone() : null;
      upgradePlayer_ = other.upgradePlayer_ != null ? other.upgradePlayer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveGameDataRequest Clone() {
      return new SaveGameDataRequest(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msg.Item> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Msg.Item.Parser);
    private readonly pbc::RepeatedField<global::Msg.Item> items_ = new pbc::RepeatedField<global::Msg.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.Item> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "mercenaries" field.</summary>
    public const int MercenariesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.Mercenary> _repeated_mercenaries_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.Mercenary.Parser);
    private readonly pbc::RepeatedField<global::Msg.Mercenary> mercenaries_ = new pbc::RepeatedField<global::Msg.Mercenary>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.Mercenary> Mercenaries {
      get { return mercenaries_; }
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 4;
    private global::Msg.Stage stage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.Stage Stage {
      get { return stage_; }
      set {
        stage_ = value;
      }
    }

    /// <summary>Field number for the "upgradePlayer" field.</summary>
    public const int UpgradePlayerFieldNumber = 5;
    private global::Msg.UpgradePlayer upgradePlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.UpgradePlayer UpgradePlayer {
      get { return upgradePlayer_; }
      set {
        upgradePlayer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveGameDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveGameDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      if(!mercenaries_.Equals(other.mercenaries_)) return false;
      if (!object.Equals(Stage, other.Stage)) return false;
      if (!object.Equals(UpgradePlayer, other.UpgradePlayer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      hash ^= mercenaries_.GetHashCode();
      if (stage_ != null) hash ^= Stage.GetHashCode();
      if (upgradePlayer_ != null) hash ^= UpgradePlayer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      mercenaries_.WriteTo(output, _repeated_mercenaries_codec);
      if (stage_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Stage);
      }
      if (upgradePlayer_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UpgradePlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      size += mercenaries_.CalculateSize(_repeated_mercenaries_codec);
      if (stage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stage);
      }
      if (upgradePlayer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpgradePlayer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveGameDataRequest other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      mercenaries_.Add(other.mercenaries_);
      if (other.stage_ != null) {
        if (stage_ == null) {
          Stage = new global::Msg.Stage();
        }
        Stage.MergeFrom(other.Stage);
      }
      if (other.upgradePlayer_ != null) {
        if (upgradePlayer_ == null) {
          UpgradePlayer = new global::Msg.UpgradePlayer();
        }
        UpgradePlayer.MergeFrom(other.UpgradePlayer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 26: {
            mercenaries_.AddEntriesFrom(input, _repeated_mercenaries_codec);
            break;
          }
          case 34: {
            if (stage_ == null) {
              Stage = new global::Msg.Stage();
            }
            input.ReadMessage(Stage);
            break;
          }
          case 42: {
            if (upgradePlayer_ == null) {
              UpgradePlayer = new global::Msg.UpgradePlayer();
            }
            input.ReadMessage(UpgradePlayer);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SaveGameDataReply : pb::IMessage<SaveGameDataReply> {
    private static readonly pb::MessageParser<SaveGameDataReply> _parser = new pb::MessageParser<SaveGameDataReply>(() => new SaveGameDataReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveGameDataReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveGameDataReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveGameDataReply(SaveGameDataReply other) : this() {
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveGameDataReply Clone() {
      return new SaveGameDataReply(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Msg.ERROR_CODE error_ = global::Msg.ERROR_CODE.Ok;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ERROR_CODE Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveGameDataReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveGameDataReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error != global::Msg.ERROR_CODE.Ok) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error != global::Msg.ERROR_CODE.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error != global::Msg.ERROR_CODE.Ok) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveGameDataReply other) {
      if (other == null) {
        return;
      }
      if (other.Error != global::Msg.ERROR_CODE.Ok) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Error = (global::Msg.ERROR_CODE) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RankingRequest : pb::IMessage<RankingRequest> {
    private static readonly pb::MessageParser<RankingRequest> _parser = new pb::MessageParser<RankingRequest>(() => new RankingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RankingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingRequest(RankingRequest other) : this() {
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingRequest Clone() {
      return new RankingRequest(this);
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 1;
    private long score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RankingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RankingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Score != 0L) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Score != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Score != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RankingRequest other) {
      if (other == null) {
        return;
      }
      if (other.Score != 0L) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Score = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RankingReply : pb::IMessage<RankingReply> {
    private static readonly pb::MessageParser<RankingReply> _parser = new pb::MessageParser<RankingReply>(() => new RankingReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RankingReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingReply(RankingReply other) : this() {
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingReply Clone() {
      return new RankingReply(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Msg.ERROR_CODE error_ = global::Msg.ERROR_CODE.Ok;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ERROR_CODE Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RankingReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RankingReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error != global::Msg.ERROR_CODE.Ok) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error != global::Msg.ERROR_CODE.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error != global::Msg.ERROR_CODE.Ok) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RankingReply other) {
      if (other == null) {
        return;
      }
      if (other.Error != global::Msg.ERROR_CODE.Ok) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Error = (global::Msg.ERROR_CODE) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RankingListRequest : pb::IMessage<RankingListRequest> {
    private static readonly pb::MessageParser<RankingListRequest> _parser = new pb::MessageParser<RankingListRequest>(() => new RankingListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RankingListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingListRequest(RankingListRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingListRequest Clone() {
      return new RankingListRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RankingListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RankingListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RankingListRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class RankingListReply : pb::IMessage<RankingListReply> {
    private static readonly pb::MessageParser<RankingListReply> _parser = new pb::MessageParser<RankingListReply>(() => new RankingListReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RankingListReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.RpcServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingListReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingListReply(RankingListReply other) : this() {
      error_ = other.error_;
      myRanking_ = other.myRanking_ != null ? other.myRanking_.Clone() : null;
      rankings_ = other.rankings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingListReply Clone() {
      return new RankingListReply(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Msg.ERROR_CODE error_ = global::Msg.ERROR_CODE.Ok;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.ERROR_CODE Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "myRanking" field.</summary>
    public const int MyRankingFieldNumber = 2;
    private global::Msg.RankingListReply.Types.Ranking myRanking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msg.RankingListReply.Types.Ranking MyRanking {
      get { return myRanking_; }
      set {
        myRanking_ = value;
      }
    }

    /// <summary>Field number for the "rankings" field.</summary>
    public const int RankingsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.RankingListReply.Types.Ranking> _repeated_rankings_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.RankingListReply.Types.Ranking.Parser);
    private readonly pbc::RepeatedField<global::Msg.RankingListReply.Types.Ranking> rankings_ = new pbc::RepeatedField<global::Msg.RankingListReply.Types.Ranking>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msg.RankingListReply.Types.Ranking> Rankings {
      get { return rankings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RankingListReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RankingListReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      if (!object.Equals(MyRanking, other.MyRanking)) return false;
      if(!rankings_.Equals(other.rankings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error != global::Msg.ERROR_CODE.Ok) hash ^= Error.GetHashCode();
      if (myRanking_ != null) hash ^= MyRanking.GetHashCode();
      hash ^= rankings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error != global::Msg.ERROR_CODE.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Error);
      }
      if (myRanking_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MyRanking);
      }
      rankings_.WriteTo(output, _repeated_rankings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error != global::Msg.ERROR_CODE.Ok) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (myRanking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MyRanking);
      }
      size += rankings_.CalculateSize(_repeated_rankings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RankingListReply other) {
      if (other == null) {
        return;
      }
      if (other.Error != global::Msg.ERROR_CODE.Ok) {
        Error = other.Error;
      }
      if (other.myRanking_ != null) {
        if (myRanking_ == null) {
          MyRanking = new global::Msg.RankingListReply.Types.Ranking();
        }
        MyRanking.MergeFrom(other.MyRanking);
      }
      rankings_.Add(other.rankings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Error = (global::Msg.ERROR_CODE) input.ReadEnum();
            break;
          }
          case 18: {
            if (myRanking_ == null) {
              MyRanking = new global::Msg.RankingListReply.Types.Ranking();
            }
            input.ReadMessage(MyRanking);
            break;
          }
          case 26: {
            rankings_.AddEntriesFrom(input, _repeated_rankings_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RankingListReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Ranking : pb::IMessage<Ranking> {
        private static readonly pb::MessageParser<Ranking> _parser = new pb::MessageParser<Ranking>(() => new Ranking());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Ranking> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Msg.RankingListReply.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Ranking() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Ranking(Ranking other) : this() {
          nickName_ = other.nickName_;
          rank_ = other.rank_;
          score_ = other.score_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Ranking Clone() {
          return new Ranking(this);
        }

        /// <summary>Field number for the "nickName" field.</summary>
        public const int NickNameFieldNumber = 1;
        private string nickName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string NickName {
          get { return nickName_; }
          set {
            nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "rank" field.</summary>
        public const int RankFieldNumber = 2;
        private int rank_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Rank {
          get { return rank_; }
          set {
            rank_ = value;
          }
        }

        /// <summary>Field number for the "score" field.</summary>
        public const int ScoreFieldNumber = 3;
        private int score_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Score {
          get { return score_; }
          set {
            score_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Ranking);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Ranking other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NickName != other.NickName) return false;
          if (Rank != other.Rank) return false;
          if (Score != other.Score) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (NickName.Length != 0) hash ^= NickName.GetHashCode();
          if (Rank != 0) hash ^= Rank.GetHashCode();
          if (Score != 0) hash ^= Score.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (NickName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(NickName);
          }
          if (Rank != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Rank);
          }
          if (Score != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Score);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (NickName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
          }
          if (Rank != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
          }
          if (Score != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Ranking other) {
          if (other == null) {
            return;
          }
          if (other.NickName.Length != 0) {
            NickName = other.NickName;
          }
          if (other.Rank != 0) {
            Rank = other.Rank;
          }
          if (other.Score != 0) {
            Score = other.Score;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                NickName = input.ReadString();
                break;
              }
              case 16: {
                Rank = input.ReadInt32();
                break;
              }
              case 24: {
                Score = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
