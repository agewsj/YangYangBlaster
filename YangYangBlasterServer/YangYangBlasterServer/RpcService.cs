// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rpc_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yyb {

  /// <summary>Holder for reflection information generated from rpc_service.proto</summary>
  public static partial class RpcServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for rpc_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RpcServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFycGNfc2VydmljZS5wcm90bxIDeXliImAKGFJwY1NlcnZpY2VFeGFtcGxl",
            "UmVxdWVzdBIMCgRhcmcxGAEgASgFEgwKBGFyZzIYAiABKAISDAoEYXJnMxgD",
            "IAEoCRIMCgRhcmc0GAQgASgIEgwKBGFyZzUYBSADKAUiOAoWUnBjU2Vydmlj",
            "ZUV4YW1wbGVSZXBseRIeCgVlcnJvchgBIAEoDjIPLnl5Yi5FUlJPUl9DT0RF",
            "IgcKBUVtcHR5IiMKEFB1c2hOb3RpZmljYXRpb24SDwoHcGF5bG9hZBgBIAEo",
            "CSLLAQoMTG9naW5SZXF1ZXN0Ei8KCWxvZ2luVHlwZRgBIAEoDjIcLnl5Yi5M",
            "b2dpblJlcXVlc3QuTE9HSU5fVFlQRRIQCghsb2dpbktleRgCIAEoCRIPCgdp",
            "ZFRva2VuGAMgASgJEhAKCG5pY2tOYW1lGAQgASgJIlUKCkxPR0lOX1RZUEUS",
            "FwoTTE9HSU5fVFlQRV9OT05fQ0VSVBAAEhUKEUxPR0lOX1RZUEVfR09PR0xF",
            "EAESFwoTTE9HSU5fVFlQRV9GQUNFQk9PSxACInAKCkxvZ2luUmVwbHkSHgoF",
            "ZXJyb3IYASABKA4yDy55eWIuRVJST1JfQ09ERRILCgN1c24YAiABKAUSEAoI",
            "bmlja05hbWUYAyABKAkSEAoIbG9naW5LZXkYBCABKAkSEQoJYWNjZXNzS2V5",
            "GAUgASgJIh8KDlJhbmtpbmdSZXF1ZXN0Eg0KBXNjb3JlGAEgASgDIi4KDFJh",
            "bmtpbmdSZXBseRIeCgVlcnJvchgBIAEoDjIPLnl5Yi5FUlJPUl9DT0RFIhQK",
            "ElJhbmtpbmdMaXN0UmVxdWVzdCLPAQoQUmFua2luZ0xpc3RSZXBseRIeCgVl",
            "cnJvchgBIAEoDjIPLnl5Yi5FUlJPUl9DT0RFEjAKCW15UmFua2luZxgCIAEo",
            "CzIdLnl5Yi5SYW5raW5nTGlzdFJlcGx5LlJhbmtpbmcSLwoIcmFua2luZ3MY",
            "AyADKAsyHS55eWIuUmFua2luZ0xpc3RSZXBseS5SYW5raW5nGjgKB1Jhbmtp",
            "bmcSEAoIbmlja05hbWUYASABKAkSDAoEcmFuaxgCIAEoBRINCgVzY29yZRgD",
            "IAEoBSrUAwoKRVJST1JfQ09ERRIRCg1FUlJPUl9DT0RFX09LEAASHQoZRVJS",
            "T1JfQ09ERV9FTVBUWV9OSUNLTkFNRRABEhsKF0VSUk9SX0NPREVfRFVQX05J",
            "Q0tOQU1FEAISLworRVJST1JfQ09ERV9OSUNLTkFNRV9IQVZFX1NQRUNJQUxf",
            "Q0hBUkFDVEVSUxADEiQKIEVSUk9SX0NPREVfVU5BQkxFX1RPX0NSRUFURV9V",
            "U0VSEAQSIQodRVJST1JfQ09ERV9GQUlMRURfVE9fR0VUX1VTRVIQBRIhCh1F",
            "UlJPUl9DT0RFX0dPT0dMRV9BVVRIX0ZBSUxFRBAGEh0KGUVSUk9SX0NPREVf",
            "RU1QVFlfSURfVE9LRU4QBxIpCiVFUlJPUl9DT0RFX0ZBSUxFRF9UT19VUERB",
            "VEVfTE9HSU5fS0VZEAgSKgomRVJST1JfQ09ERV9GQUlMRURfVE9fQ0hBTkdF",
            "X0xPR0lOX1RZUEUQCRImCiJFUlJPUl9DT0RFX0xPR0lOX1RZUEVfSVNfRElG",
            "RkVSRU5UEAoSJQohRVJST1JfQ09ERV9BQ0NFU1NfS0VZX0hBU19FWFBJUkVE",
            "EAsSFQoRRVJST1JfQ09ERV9TWVNUTUUQDDK1AgoKUnBjU2VydmljZRJRChFS",
            "cGNTZXJ2aWNlRXhhbXBsZRIdLnl5Yi5ScGNTZXJ2aWNlRXhhbXBsZVJlcXVl",
            "c3QaGy55eWIuUnBjU2VydmljZUV4YW1wbGVSZXBseSIAEi8KBkxpc3RlbhIK",
            "Lnl5Yi5FbXB0eRoVLnl5Yi5QdXNoTm90aWZpY2F0aW9uIgAwARItCgVMb2dp",
            "bhIRLnl5Yi5Mb2dpblJlcXVlc3QaDy55eWIuTG9naW5SZXBseSIAEjMKB1Jh",
            "bmtpbmcSEy55eWIuUmFua2luZ1JlcXVlc3QaES55eWIuUmFua2luZ1JlcGx5",
            "IgASPwoLUmFua2luZ0xpc3QSFy55eWIuUmFua2luZ0xpc3RSZXF1ZXN0GhUu",
            "eXliLlJhbmtpbmdMaXN0UmVwbHkiAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Yyb.ERROR_CODE), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yyb.RpcServiceExampleRequest), global::Yyb.RpcServiceExampleRequest.Parser, new[]{ "Arg1", "Arg2", "Arg3", "Arg4", "Arg5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yyb.RpcServiceExampleReply), global::Yyb.RpcServiceExampleReply.Parser, new[]{ "Error" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yyb.Empty), global::Yyb.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yyb.PushNotification), global::Yyb.PushNotification.Parser, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yyb.LoginRequest), global::Yyb.LoginRequest.Parser, new[]{ "LoginType", "LoginKey", "IdToken", "NickName" }, null, new[]{ typeof(global::Yyb.LoginRequest.Types.LOGIN_TYPE) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yyb.LoginReply), global::Yyb.LoginReply.Parser, new[]{ "Error", "Usn", "NickName", "LoginKey", "AccessKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yyb.RankingRequest), global::Yyb.RankingRequest.Parser, new[]{ "Score" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yyb.RankingReply), global::Yyb.RankingReply.Parser, new[]{ "Error" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yyb.RankingListRequest), global::Yyb.RankingListRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yyb.RankingListReply), global::Yyb.RankingListReply.Parser, new[]{ "Error", "MyRanking", "Rankings" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Yyb.RankingListReply.Types.Ranking), global::Yyb.RankingListReply.Types.Ranking.Parser, new[]{ "NickName", "Rank", "Score" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  public enum ERROR_CODE {
    [pbr::OriginalName("ERROR_CODE_OK")] Ok = 0,
    [pbr::OriginalName("ERROR_CODE_EMPTY_NICKNAME")] EmptyNickname = 1,
    [pbr::OriginalName("ERROR_CODE_DUP_NICKNAME")] DupNickname = 2,
    [pbr::OriginalName("ERROR_CODE_NICKNAME_HAVE_SPECIAL_CHARACTERS")] NicknameHaveSpecialCharacters = 3,
    [pbr::OriginalName("ERROR_CODE_UNABLE_TO_CREATE_USER")] UnableToCreateUser = 4,
    [pbr::OriginalName("ERROR_CODE_FAILED_TO_GET_USER")] FailedToGetUser = 5,
    [pbr::OriginalName("ERROR_CODE_GOOGLE_AUTH_FAILED")] GoogleAuthFailed = 6,
    [pbr::OriginalName("ERROR_CODE_EMPTY_ID_TOKEN")] EmptyIdToken = 7,
    [pbr::OriginalName("ERROR_CODE_FAILED_TO_UPDATE_LOGIN_KEY")] FailedToUpdateLoginKey = 8,
    [pbr::OriginalName("ERROR_CODE_FAILED_TO_CHANGE_LOGIN_TYPE")] FailedToChangeLoginType = 9,
    [pbr::OriginalName("ERROR_CODE_LOGIN_TYPE_IS_DIFFERENT")] LoginTypeIsDifferent = 10,
    [pbr::OriginalName("ERROR_CODE_ACCESS_KEY_HAS_EXPIRED")] AccessKeyHasExpired = 11,
    [pbr::OriginalName("ERROR_CODE_SYSTME")] Systme = 12,
  }

  #endregion

  #region Messages
  public sealed partial class RpcServiceExampleRequest : pb::IMessage<RpcServiceExampleRequest> {
    private static readonly pb::MessageParser<RpcServiceExampleRequest> _parser = new pb::MessageParser<RpcServiceExampleRequest>(() => new RpcServiceExampleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcServiceExampleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yyb.RpcServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcServiceExampleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcServiceExampleRequest(RpcServiceExampleRequest other) : this() {
      arg1_ = other.arg1_;
      arg2_ = other.arg2_;
      arg3_ = other.arg3_;
      arg4_ = other.arg4_;
      arg5_ = other.arg5_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcServiceExampleRequest Clone() {
      return new RpcServiceExampleRequest(this);
    }

    /// <summary>Field number for the "arg1" field.</summary>
    public const int Arg1FieldNumber = 1;
    private int arg1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Arg1 {
      get { return arg1_; }
      set {
        arg1_ = value;
      }
    }

    /// <summary>Field number for the "arg2" field.</summary>
    public const int Arg2FieldNumber = 2;
    private float arg2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Arg2 {
      get { return arg2_; }
      set {
        arg2_ = value;
      }
    }

    /// <summary>Field number for the "arg3" field.</summary>
    public const int Arg3FieldNumber = 3;
    private string arg3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Arg3 {
      get { return arg3_; }
      set {
        arg3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "arg4" field.</summary>
    public const int Arg4FieldNumber = 4;
    private bool arg4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Arg4 {
      get { return arg4_; }
      set {
        arg4_ = value;
      }
    }

    /// <summary>Field number for the "arg5" field.</summary>
    public const int Arg5FieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_arg5_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> arg5_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Arg5 {
      get { return arg5_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcServiceExampleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcServiceExampleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Arg1 != other.Arg1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Arg2, other.Arg2)) return false;
      if (Arg3 != other.Arg3) return false;
      if (Arg4 != other.Arg4) return false;
      if(!arg5_.Equals(other.arg5_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Arg1 != 0) hash ^= Arg1.GetHashCode();
      if (Arg2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Arg2);
      if (Arg3.Length != 0) hash ^= Arg3.GetHashCode();
      if (Arg4 != false) hash ^= Arg4.GetHashCode();
      hash ^= arg5_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Arg1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Arg1);
      }
      if (Arg2 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Arg2);
      }
      if (Arg3.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Arg3);
      }
      if (Arg4 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Arg4);
      }
      arg5_.WriteTo(output, _repeated_arg5_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Arg1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Arg1);
      }
      if (Arg2 != 0F) {
        size += 1 + 4;
      }
      if (Arg3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Arg3);
      }
      if (Arg4 != false) {
        size += 1 + 1;
      }
      size += arg5_.CalculateSize(_repeated_arg5_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcServiceExampleRequest other) {
      if (other == null) {
        return;
      }
      if (other.Arg1 != 0) {
        Arg1 = other.Arg1;
      }
      if (other.Arg2 != 0F) {
        Arg2 = other.Arg2;
      }
      if (other.Arg3.Length != 0) {
        Arg3 = other.Arg3;
      }
      if (other.Arg4 != false) {
        Arg4 = other.Arg4;
      }
      arg5_.Add(other.arg5_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Arg1 = input.ReadInt32();
            break;
          }
          case 21: {
            Arg2 = input.ReadFloat();
            break;
          }
          case 26: {
            Arg3 = input.ReadString();
            break;
          }
          case 32: {
            Arg4 = input.ReadBool();
            break;
          }
          case 42:
          case 40: {
            arg5_.AddEntriesFrom(input, _repeated_arg5_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RpcServiceExampleReply : pb::IMessage<RpcServiceExampleReply> {
    private static readonly pb::MessageParser<RpcServiceExampleReply> _parser = new pb::MessageParser<RpcServiceExampleReply>(() => new RpcServiceExampleReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcServiceExampleReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yyb.RpcServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcServiceExampleReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcServiceExampleReply(RpcServiceExampleReply other) : this() {
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcServiceExampleReply Clone() {
      return new RpcServiceExampleReply(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Yyb.ERROR_CODE error_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yyb.ERROR_CODE Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcServiceExampleReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcServiceExampleReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error != 0) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcServiceExampleReply other) {
      if (other == null) {
        return;
      }
      if (other.Error != 0) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Error = (global::Yyb.ERROR_CODE) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yyb.RpcServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class PushNotification : pb::IMessage<PushNotification> {
    private static readonly pb::MessageParser<PushNotification> _parser = new pb::MessageParser<PushNotification>(() => new PushNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PushNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yyb.RpcServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushNotification(PushNotification other) : this() {
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushNotification Clone() {
      return new PushNotification(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private string payload_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PushNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PushNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Payload.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PushNotification other) {
      if (other == null) {
        return;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Payload = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yyb.RpcServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      loginType_ = other.loginType_;
      loginKey_ = other.loginKey_;
      idToken_ = other.idToken_;
      nickName_ = other.nickName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "loginType" field.</summary>
    public const int LoginTypeFieldNumber = 1;
    private global::Yyb.LoginRequest.Types.LOGIN_TYPE loginType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yyb.LoginRequest.Types.LOGIN_TYPE LoginType {
      get { return loginType_; }
      set {
        loginType_ = value;
      }
    }

    /// <summary>Field number for the "loginKey" field.</summary>
    public const int LoginKeyFieldNumber = 2;
    private string loginKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoginKey {
      get { return loginKey_; }
      set {
        loginKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idToken" field.</summary>
    public const int IdTokenFieldNumber = 3;
    private string idToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdToken {
      get { return idToken_; }
      set {
        idToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickName" field.</summary>
    public const int NickNameFieldNumber = 4;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LoginType != other.LoginType) return false;
      if (LoginKey != other.LoginKey) return false;
      if (IdToken != other.IdToken) return false;
      if (NickName != other.NickName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LoginType != 0) hash ^= LoginType.GetHashCode();
      if (LoginKey.Length != 0) hash ^= LoginKey.GetHashCode();
      if (IdToken.Length != 0) hash ^= IdToken.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LoginType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LoginType);
      }
      if (LoginKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LoginKey);
      }
      if (IdToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IdToken);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NickName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LoginType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LoginType);
      }
      if (LoginKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoginKey);
      }
      if (IdToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdToken);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.LoginType != 0) {
        LoginType = other.LoginType;
      }
      if (other.LoginKey.Length != 0) {
        LoginKey = other.LoginKey;
      }
      if (other.IdToken.Length != 0) {
        IdToken = other.IdToken;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LoginType = (global::Yyb.LoginRequest.Types.LOGIN_TYPE) input.ReadEnum();
            break;
          }
          case 18: {
            LoginKey = input.ReadString();
            break;
          }
          case 26: {
            IdToken = input.ReadString();
            break;
          }
          case 34: {
            NickName = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the LoginRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum LOGIN_TYPE {
        [pbr::OriginalName("LOGIN_TYPE_NON_CERT")] NonCert = 0,
        [pbr::OriginalName("LOGIN_TYPE_GOOGLE")] Google = 1,
        [pbr::OriginalName("LOGIN_TYPE_FACEBOOK")] Facebook = 2,
      }

    }
    #endregion

  }

  public sealed partial class LoginReply : pb::IMessage<LoginReply> {
    private static readonly pb::MessageParser<LoginReply> _parser = new pb::MessageParser<LoginReply>(() => new LoginReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yyb.RpcServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply(LoginReply other) : this() {
      error_ = other.error_;
      usn_ = other.usn_;
      nickName_ = other.nickName_;
      loginKey_ = other.loginKey_;
      accessKey_ = other.accessKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply Clone() {
      return new LoginReply(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Yyb.ERROR_CODE error_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yyb.ERROR_CODE Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "usn" field.</summary>
    public const int UsnFieldNumber = 2;
    private int usn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Usn {
      get { return usn_; }
      set {
        usn_ = value;
      }
    }

    /// <summary>Field number for the "nickName" field.</summary>
    public const int NickNameFieldNumber = 3;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "loginKey" field.</summary>
    public const int LoginKeyFieldNumber = 4;
    private string loginKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoginKey {
      get { return loginKey_; }
      set {
        loginKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accessKey" field.</summary>
    public const int AccessKeyFieldNumber = 5;
    private string accessKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessKey {
      get { return accessKey_; }
      set {
        accessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      if (Usn != other.Usn) return false;
      if (NickName != other.NickName) return false;
      if (LoginKey != other.LoginKey) return false;
      if (AccessKey != other.AccessKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error != 0) hash ^= Error.GetHashCode();
      if (Usn != 0) hash ^= Usn.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (LoginKey.Length != 0) hash ^= LoginKey.GetHashCode();
      if (AccessKey.Length != 0) hash ^= AccessKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Error);
      }
      if (Usn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Usn);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NickName);
      }
      if (LoginKey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LoginKey);
      }
      if (AccessKey.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AccessKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (Usn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Usn);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (LoginKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoginKey);
      }
      if (AccessKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginReply other) {
      if (other == null) {
        return;
      }
      if (other.Error != 0) {
        Error = other.Error;
      }
      if (other.Usn != 0) {
        Usn = other.Usn;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.LoginKey.Length != 0) {
        LoginKey = other.LoginKey;
      }
      if (other.AccessKey.Length != 0) {
        AccessKey = other.AccessKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Error = (global::Yyb.ERROR_CODE) input.ReadEnum();
            break;
          }
          case 16: {
            Usn = input.ReadInt32();
            break;
          }
          case 26: {
            NickName = input.ReadString();
            break;
          }
          case 34: {
            LoginKey = input.ReadString();
            break;
          }
          case 42: {
            AccessKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RankingRequest : pb::IMessage<RankingRequest> {
    private static readonly pb::MessageParser<RankingRequest> _parser = new pb::MessageParser<RankingRequest>(() => new RankingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RankingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yyb.RpcServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingRequest(RankingRequest other) : this() {
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingRequest Clone() {
      return new RankingRequest(this);
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 1;
    private long score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RankingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RankingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Score != 0L) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Score != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Score != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RankingRequest other) {
      if (other == null) {
        return;
      }
      if (other.Score != 0L) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Score = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RankingReply : pb::IMessage<RankingReply> {
    private static readonly pb::MessageParser<RankingReply> _parser = new pb::MessageParser<RankingReply>(() => new RankingReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RankingReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yyb.RpcServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingReply(RankingReply other) : this() {
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingReply Clone() {
      return new RankingReply(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Yyb.ERROR_CODE error_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yyb.ERROR_CODE Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RankingReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RankingReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error != 0) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RankingReply other) {
      if (other == null) {
        return;
      }
      if (other.Error != 0) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Error = (global::Yyb.ERROR_CODE) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RankingListRequest : pb::IMessage<RankingListRequest> {
    private static readonly pb::MessageParser<RankingListRequest> _parser = new pb::MessageParser<RankingListRequest>(() => new RankingListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RankingListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yyb.RpcServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingListRequest(RankingListRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingListRequest Clone() {
      return new RankingListRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RankingListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RankingListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RankingListRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class RankingListReply : pb::IMessage<RankingListReply> {
    private static readonly pb::MessageParser<RankingListReply> _parser = new pb::MessageParser<RankingListReply>(() => new RankingListReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RankingListReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yyb.RpcServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingListReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingListReply(RankingListReply other) : this() {
      error_ = other.error_;
      myRanking_ = other.myRanking_ != null ? other.myRanking_.Clone() : null;
      rankings_ = other.rankings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingListReply Clone() {
      return new RankingListReply(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Yyb.ERROR_CODE error_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yyb.ERROR_CODE Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "myRanking" field.</summary>
    public const int MyRankingFieldNumber = 2;
    private global::Yyb.RankingListReply.Types.Ranking myRanking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yyb.RankingListReply.Types.Ranking MyRanking {
      get { return myRanking_; }
      set {
        myRanking_ = value;
      }
    }

    /// <summary>Field number for the "rankings" field.</summary>
    public const int RankingsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Yyb.RankingListReply.Types.Ranking> _repeated_rankings_codec
        = pb::FieldCodec.ForMessage(26, global::Yyb.RankingListReply.Types.Ranking.Parser);
    private readonly pbc::RepeatedField<global::Yyb.RankingListReply.Types.Ranking> rankings_ = new pbc::RepeatedField<global::Yyb.RankingListReply.Types.Ranking>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yyb.RankingListReply.Types.Ranking> Rankings {
      get { return rankings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RankingListReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RankingListReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      if (!object.Equals(MyRanking, other.MyRanking)) return false;
      if(!rankings_.Equals(other.rankings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error != 0) hash ^= Error.GetHashCode();
      if (myRanking_ != null) hash ^= MyRanking.GetHashCode();
      hash ^= rankings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Error);
      }
      if (myRanking_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MyRanking);
      }
      rankings_.WriteTo(output, _repeated_rankings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (myRanking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MyRanking);
      }
      size += rankings_.CalculateSize(_repeated_rankings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RankingListReply other) {
      if (other == null) {
        return;
      }
      if (other.Error != 0) {
        Error = other.Error;
      }
      if (other.myRanking_ != null) {
        if (myRanking_ == null) {
          MyRanking = new global::Yyb.RankingListReply.Types.Ranking();
        }
        MyRanking.MergeFrom(other.MyRanking);
      }
      rankings_.Add(other.rankings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Error = (global::Yyb.ERROR_CODE) input.ReadEnum();
            break;
          }
          case 18: {
            if (myRanking_ == null) {
              MyRanking = new global::Yyb.RankingListReply.Types.Ranking();
            }
            input.ReadMessage(MyRanking);
            break;
          }
          case 26: {
            rankings_.AddEntriesFrom(input, _repeated_rankings_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RankingListReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Ranking : pb::IMessage<Ranking> {
        private static readonly pb::MessageParser<Ranking> _parser = new pb::MessageParser<Ranking>(() => new Ranking());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Ranking> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Yyb.RankingListReply.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Ranking() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Ranking(Ranking other) : this() {
          nickName_ = other.nickName_;
          rank_ = other.rank_;
          score_ = other.score_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Ranking Clone() {
          return new Ranking(this);
        }

        /// <summary>Field number for the "nickName" field.</summary>
        public const int NickNameFieldNumber = 1;
        private string nickName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string NickName {
          get { return nickName_; }
          set {
            nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "rank" field.</summary>
        public const int RankFieldNumber = 2;
        private int rank_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Rank {
          get { return rank_; }
          set {
            rank_ = value;
          }
        }

        /// <summary>Field number for the "score" field.</summary>
        public const int ScoreFieldNumber = 3;
        private int score_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Score {
          get { return score_; }
          set {
            score_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Ranking);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Ranking other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NickName != other.NickName) return false;
          if (Rank != other.Rank) return false;
          if (Score != other.Score) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (NickName.Length != 0) hash ^= NickName.GetHashCode();
          if (Rank != 0) hash ^= Rank.GetHashCode();
          if (Score != 0) hash ^= Score.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (NickName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(NickName);
          }
          if (Rank != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Rank);
          }
          if (Score != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Score);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (NickName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
          }
          if (Rank != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
          }
          if (Score != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Ranking other) {
          if (other == null) {
            return;
          }
          if (other.NickName.Length != 0) {
            NickName = other.NickName;
          }
          if (other.Rank != 0) {
            Rank = other.Rank;
          }
          if (other.Score != 0) {
            Score = other.Score;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                NickName = input.ReadString();
                break;
              }
              case 16: {
                Rank = input.ReadInt32();
                break;
              }
              case 24: {
                Score = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
