// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc_service.proto

#include "rpc_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_rpc_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Item_rpc_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Mercenary_rpc_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RankingListReply_Ranking_rpc_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Stage_rpc_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpgradePlayer_rpc_5fservice_2eproto;
namespace yyb {
class RpcServiceExampleRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RpcServiceExampleRequest> _instance;
} _RpcServiceExampleRequest_default_instance_;
class RpcServiceExampleReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RpcServiceExampleReply> _instance;
} _RpcServiceExampleReply_default_instance_;
class EmptyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Empty> _instance;
} _Empty_default_instance_;
class PushNotificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PushNotification> _instance;
} _PushNotification_default_instance_;
class LoginRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoginRequest> _instance;
} _LoginRequest_default_instance_;
class LoginReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoginReply> _instance;
} _LoginReply_default_instance_;
class ItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Item> _instance;
} _Item_default_instance_;
class MercenaryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Mercenary> _instance;
} _Mercenary_default_instance_;
class StageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Stage> _instance;
} _Stage_default_instance_;
class UpgradePlayerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpgradePlayer> _instance;
} _UpgradePlayer_default_instance_;
class GameDataRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GameDataRequest> _instance;
} _GameDataRequest_default_instance_;
class GameDataReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GameDataReply> _instance;
} _GameDataReply_default_instance_;
class RankingRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RankingRequest> _instance;
} _RankingRequest_default_instance_;
class RankingReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RankingReply> _instance;
} _RankingReply_default_instance_;
class RankingListRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RankingListRequest> _instance;
} _RankingListRequest_default_instance_;
class RankingListReply_RankingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RankingListReply_Ranking> _instance;
} _RankingListReply_Ranking_default_instance_;
class RankingListReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RankingListReply> _instance;
} _RankingListReply_default_instance_;
}  // namespace yyb
static void InitDefaultsscc_info_Empty_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_Empty_default_instance_;
    new (ptr) ::yyb::Empty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::Empty::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Empty_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Empty_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GameDataReply_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_GameDataReply_default_instance_;
    new (ptr) ::yyb::GameDataReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::GameDataReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_GameDataReply_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_GameDataReply_rpc_5fservice_2eproto}, {
      &scc_info_Item_rpc_5fservice_2eproto.base,
      &scc_info_Mercenary_rpc_5fservice_2eproto.base,
      &scc_info_Stage_rpc_5fservice_2eproto.base,
      &scc_info_UpgradePlayer_rpc_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_GameDataRequest_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_GameDataRequest_default_instance_;
    new (ptr) ::yyb::GameDataRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::GameDataRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_GameDataRequest_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_GameDataRequest_rpc_5fservice_2eproto}, {
      &scc_info_Item_rpc_5fservice_2eproto.base,
      &scc_info_Mercenary_rpc_5fservice_2eproto.base,
      &scc_info_Stage_rpc_5fservice_2eproto.base,
      &scc_info_UpgradePlayer_rpc_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_Item_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_Item_default_instance_;
    new (ptr) ::yyb::Item();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::Item::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Item_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Item_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_LoginReply_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_LoginReply_default_instance_;
    new (ptr) ::yyb::LoginReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::LoginReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoginReply_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoginReply_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_LoginRequest_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_LoginRequest_default_instance_;
    new (ptr) ::yyb::LoginRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::LoginRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoginRequest_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoginRequest_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_Mercenary_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_Mercenary_default_instance_;
    new (ptr) ::yyb::Mercenary();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::Mercenary::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Mercenary_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Mercenary_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_PushNotification_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_PushNotification_default_instance_;
    new (ptr) ::yyb::PushNotification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::PushNotification::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PushNotification_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PushNotification_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RankingListReply_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_RankingListReply_default_instance_;
    new (ptr) ::yyb::RankingListReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::RankingListReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RankingListReply_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RankingListReply_rpc_5fservice_2eproto}, {
      &scc_info_RankingListReply_Ranking_rpc_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_RankingListReply_Ranking_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_RankingListReply_Ranking_default_instance_;
    new (ptr) ::yyb::RankingListReply_Ranking();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::RankingListReply_Ranking::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RankingListReply_Ranking_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RankingListReply_Ranking_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RankingListRequest_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_RankingListRequest_default_instance_;
    new (ptr) ::yyb::RankingListRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::RankingListRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RankingListRequest_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RankingListRequest_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RankingReply_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_RankingReply_default_instance_;
    new (ptr) ::yyb::RankingReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::RankingReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RankingReply_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RankingReply_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RankingRequest_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_RankingRequest_default_instance_;
    new (ptr) ::yyb::RankingRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::RankingRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RankingRequest_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RankingRequest_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RpcServiceExampleReply_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_RpcServiceExampleReply_default_instance_;
    new (ptr) ::yyb::RpcServiceExampleReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::RpcServiceExampleReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RpcServiceExampleReply_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RpcServiceExampleReply_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RpcServiceExampleRequest_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_RpcServiceExampleRequest_default_instance_;
    new (ptr) ::yyb::RpcServiceExampleRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::RpcServiceExampleRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RpcServiceExampleRequest_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RpcServiceExampleRequest_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_Stage_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_Stage_default_instance_;
    new (ptr) ::yyb::Stage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::Stage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Stage_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Stage_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_UpgradePlayer_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_UpgradePlayer_default_instance_;
    new (ptr) ::yyb::UpgradePlayer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::UpgradePlayer::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpgradePlayer_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpgradePlayer_rpc_5fservice_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_rpc_5fservice_2eproto[17];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_rpc_5fservice_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_rpc_5fservice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_rpc_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::RpcServiceExampleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::RpcServiceExampleRequest, arg1_),
  PROTOBUF_FIELD_OFFSET(::yyb::RpcServiceExampleRequest, arg2_),
  PROTOBUF_FIELD_OFFSET(::yyb::RpcServiceExampleRequest, arg3_),
  PROTOBUF_FIELD_OFFSET(::yyb::RpcServiceExampleRequest, arg4_),
  PROTOBUF_FIELD_OFFSET(::yyb::RpcServiceExampleRequest, arg5_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::RpcServiceExampleReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::RpcServiceExampleReply, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::PushNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::PushNotification, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::LoginRequest, logintype_),
  PROTOBUF_FIELD_OFFSET(::yyb::LoginRequest, loginkey_),
  PROTOBUF_FIELD_OFFSET(::yyb::LoginRequest, idtoken_),
  PROTOBUF_FIELD_OFFSET(::yyb::LoginRequest, nickname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::LoginReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::LoginReply, error_),
  PROTOBUF_FIELD_OFFSET(::yyb::LoginReply, usn_),
  PROTOBUF_FIELD_OFFSET(::yyb::LoginReply, nickname_),
  PROTOBUF_FIELD_OFFSET(::yyb::LoginReply, loginkey_),
  PROTOBUF_FIELD_OFFSET(::yyb::LoginReply, accesskey_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::Item, itemname_),
  PROTOBUF_FIELD_OFFSET(::yyb::Item, itemtype_),
  PROTOBUF_FIELD_OFFSET(::yyb::Item, itemcategory_),
  PROTOBUF_FIELD_OFFSET(::yyb::Item, itemcount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::Mercenary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::Mercenary, mercenaryname_),
  PROTOBUF_FIELD_OFFSET(::yyb::Mercenary, mercenarylevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::Stage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::Stage, stagenum_),
  PROTOBUF_FIELD_OFFSET(::yyb::Stage, stagescore_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::UpgradePlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::UpgradePlayer, powerlevel_),
  PROTOBUF_FIELD_OFFSET(::yyb::UpgradePlayer, attackspeedlevel_),
  PROTOBUF_FIELD_OFFSET(::yyb::UpgradePlayer, criticallevel_),
  PROTOBUF_FIELD_OFFSET(::yyb::UpgradePlayer, buffdurationlevel_),
  PROTOBUF_FIELD_OFFSET(::yyb::UpgradePlayer, freecoinlevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::GameDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::GameDataRequest, items_),
  PROTOBUF_FIELD_OFFSET(::yyb::GameDataRequest, mercenaries_),
  PROTOBUF_FIELD_OFFSET(::yyb::GameDataRequest, stage_),
  PROTOBUF_FIELD_OFFSET(::yyb::GameDataRequest, upgradeplayer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::GameDataReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::GameDataReply, error_),
  PROTOBUF_FIELD_OFFSET(::yyb::GameDataReply, items_),
  PROTOBUF_FIELD_OFFSET(::yyb::GameDataReply, mercenaries_),
  PROTOBUF_FIELD_OFFSET(::yyb::GameDataReply, stage_),
  PROTOBUF_FIELD_OFFSET(::yyb::GameDataReply, upgradeplayer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::RankingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::RankingRequest, score_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::RankingReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::RankingReply, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::RankingListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::RankingListReply_Ranking, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::RankingListReply_Ranking, nickname_),
  PROTOBUF_FIELD_OFFSET(::yyb::RankingListReply_Ranking, rank_),
  PROTOBUF_FIELD_OFFSET(::yyb::RankingListReply_Ranking, score_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::RankingListReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::RankingListReply, error_),
  PROTOBUF_FIELD_OFFSET(::yyb::RankingListReply, myranking_),
  PROTOBUF_FIELD_OFFSET(::yyb::RankingListReply, rankings_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::yyb::RpcServiceExampleRequest)},
  { 10, -1, sizeof(::yyb::RpcServiceExampleReply)},
  { 16, -1, sizeof(::yyb::Empty)},
  { 21, -1, sizeof(::yyb::PushNotification)},
  { 27, -1, sizeof(::yyb::LoginRequest)},
  { 36, -1, sizeof(::yyb::LoginReply)},
  { 46, -1, sizeof(::yyb::Item)},
  { 55, -1, sizeof(::yyb::Mercenary)},
  { 62, -1, sizeof(::yyb::Stage)},
  { 69, -1, sizeof(::yyb::UpgradePlayer)},
  { 79, -1, sizeof(::yyb::GameDataRequest)},
  { 88, -1, sizeof(::yyb::GameDataReply)},
  { 98, -1, sizeof(::yyb::RankingRequest)},
  { 104, -1, sizeof(::yyb::RankingReply)},
  { 110, -1, sizeof(::yyb::RankingListRequest)},
  { 115, -1, sizeof(::yyb::RankingListReply_Ranking)},
  { 123, -1, sizeof(::yyb::RankingListReply)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_RpcServiceExampleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_RpcServiceExampleReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_Empty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_PushNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_LoginRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_LoginReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_Item_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_Mercenary_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_Stage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_UpgradePlayer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_GameDataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_GameDataReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_RankingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_RankingReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_RankingListRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_RankingListReply_Ranking_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_RankingListReply_default_instance_),
};

const char descriptor_table_protodef_rpc_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021rpc_service.proto\022\003yyb\032\034google/api/ann"
  "otations.proto\"`\n\030RpcServiceExampleReque"
  "st\022\014\n\004arg1\030\001 \001(\005\022\014\n\004arg2\030\002 \001(\002\022\014\n\004arg3\030\003"
  " \001(\t\022\014\n\004arg4\030\004 \001(\010\022\014\n\004arg5\030\005 \003(\005\"8\n\026RpcS"
  "erviceExampleReply\022\036\n\005error\030\001 \001(\0162\017.yyb."
  "ERROR_CODE\"\007\n\005Empty\"#\n\020PushNotification\022"
  "\017\n\007payload\030\001 \001(\t\"\313\001\n\014LoginRequest\022/\n\tlog"
  "inType\030\001 \001(\0162\034.yyb.LoginRequest.LOGIN_TY"
  "PE\022\020\n\010loginKey\030\002 \001(\t\022\017\n\007idToken\030\003 \001(\t\022\020\n"
  "\010nickName\030\004 \001(\t\"U\n\nLOGIN_TYPE\022\027\n\023LOGIN_T"
  "YPE_NON_CERT\020\000\022\025\n\021LOGIN_TYPE_GOOGLE\020\001\022\027\n"
  "\023LOGIN_TYPE_FACEBOOK\020\002\"p\n\nLoginReply\022\036\n\005"
  "error\030\001 \001(\0162\017.yyb.ERROR_CODE\022\013\n\003usn\030\002 \001("
  "\005\022\020\n\010nickName\030\003 \001(\t\022\020\n\010loginKey\030\004 \001(\t\022\021\n"
  "\taccessKey\030\005 \001(\t\"w\n\004Item\022\020\n\010itemName\030\001 \001"
  "(\t\022 \n\010itemType\030\002 \001(\0162\016.yyb.ITEM_TYPE\022(\n\014"
  "itemCategory\030\003 \001(\0162\022.yyb.ITEM_CATEGORY\022\021"
  "\n\titemCount\030\004 \001(\005\":\n\tMercenary\022\025\n\rmercen"
  "aryName\030\001 \001(\t\022\026\n\016mercenaryLevel\030\002 \001(\005\"-\n"
  "\005Stage\022\020\n\010stageNum\030\001 \001(\005\022\022\n\nstageScore\030\002"
  " \001(\003\"\206\001\n\rUpgradePlayer\022\022\n\npowerLevel\030\001 \001"
  "(\005\022\030\n\020attackSpeedLevel\030\002 \001(\005\022\025\n\rcritical"
  "Level\030\003 \001(\005\022\031\n\021buffDurationLevel\030\004 \001(\005\022\025"
  "\n\rfreeCoinLevel\030\005 \001(\005\"\226\001\n\017GameDataReques"
  "t\022\030\n\005items\030\002 \003(\0132\t.yyb.Item\022#\n\013mercenari"
  "es\030\003 \003(\0132\016.yyb.Mercenary\022\031\n\005stage\030\004 \001(\0132"
  "\n.yyb.Stage\022)\n\rupgradePlayer\030\005 \001(\0132\022.yyb"
  ".UpgradePlayer\"\264\001\n\rGameDataReply\022\036\n\005erro"
  "r\030\001 \001(\0162\017.yyb.ERROR_CODE\022\030\n\005items\030\002 \003(\0132"
  "\t.yyb.Item\022#\n\013mercenaries\030\003 \003(\0132\016.yyb.Me"
  "rcenary\022\031\n\005stage\030\004 \001(\0132\n.yyb.Stage\022)\n\rup"
  "gradePlayer\030\005 \001(\0132\022.yyb.UpgradePlayer\"\037\n"
  "\016RankingRequest\022\r\n\005score\030\001 \001(\003\".\n\014Rankin"
  "gReply\022\036\n\005error\030\001 \001(\0162\017.yyb.ERROR_CODE\"\024"
  "\n\022RankingListRequest\"\317\001\n\020RankingListRepl"
  "y\022\036\n\005error\030\001 \001(\0162\017.yyb.ERROR_CODE\0220\n\tmyR"
  "anking\030\002 \001(\0132\035.yyb.RankingListReply.Rank"
  "ing\022/\n\010rankings\030\003 \003(\0132\035.yyb.RankingListR"
  "eply.Ranking\0328\n\007Ranking\022\020\n\010nickName\030\001 \001("
  "\t\022\014\n\004rank\030\002 \001(\005\022\r\n\005score\030\003 \001(\005*\224\006\n\nERROR"
  "_CODE\022\021\n\rERROR_CODE_OK\020\000\022\035\n\031ERROR_CODE_E"
  "MPTY_NICKNAME\020\001\022\033\n\027ERROR_CODE_DUP_NICKNA"
  "ME\020\002\022/\n+ERROR_CODE_NICKNAME_HAVE_SPECIAL"
  "_CHARACTERS\020\003\022$\n ERROR_CODE_UNABLE_TO_CR"
  "EATE_USER\020\004\022!\n\035ERROR_CODE_FAILED_TO_GET_"
  "USER\020\005\022!\n\035ERROR_CODE_GOOGLE_AUTH_FAILED\020"
  "\006\022\035\n\031ERROR_CODE_EMPTY_ID_TOKEN\020\007\022)\n%ERRO"
  "R_CODE_FAILED_TO_UPDATE_LOGIN_KEY\020\010\022*\n&E"
  "RROR_CODE_FAILED_TO_CHANGE_LOGIN_TYPE\020\t\022"
  "&\n\"ERROR_CODE_LOGIN_TYPE_IS_DIFFERENT\020\n\022"
  "%\n!ERROR_CODE_ACCESS_KEY_HAS_EXPIRED\020\013\022\025"
  "\n\021ERROR_CODE_SYSTME\020\014\022\"\n\036ERROR_CODE_FAIL"
  "ED_TO_SAVE_ITEM\020\r\022\'\n#ERROR_CODE_FAILED_T"
  "O_SAVE_MERCENARY\020\016\022#\n\037ERROR_CODE_FAILED_"
  "TO_SAVE_STAGE\020\017\022,\n(ERROR_CODE_FAILED_TO_"
  "SAVE_UPGRADE_PLAYER\020\020\022\"\n\036ERROR_CODE_FAIL"
  "ED_TO_LOAD_ITEM\020\021\022\'\n#ERROR_CODE_FAILED_T"
  "O_LOAD_MERCENARY\020\022\022#\n\037ERROR_CODE_FAILED_"
  "TO_LOAD_STAGE\020\023\022,\n(ERROR_CODE_FAILED_TO_"
  "LOAD_UPGRADE_PLAYER\020\024*\334\001\n\tITEM_TYPE\022\022\n\016I"
  "TEM_TYPE_NONE\020\000\022\023\n\016ITEM_TYPE_GOLD\020\350\007\022\023\n\016"
  "ITEM_TYPE_RUBY\020\351\007\022\033\n\026ITEM_TYPE_PIECE_KNI"
  "GHT\020\352\007\022\033\n\026ITEM_TYPE_PIECE_PIRATE\020\353\007\022\031\n\024I"
  "TEM_TYPE_PIECE_STAR\020\354\007\022\036\n\031ITEM_TYPE_PIEC"
  "E_SCIENTIST\020\355\007\022\034\n\027ITEM_TYPE_PIECE_STUDEN"
  "T\020\356\007*E\n\rITEM_CATEGORY\022\030\n\024ITEM_CATEGORY_N"
  "ORMAL\020\000\022\032\n\026ITEM_CATEGORY_CURRENCY\020\0012\310\003\n\n"
  "RpcService\022Q\n\021RpcServiceExample\022\035.yyb.Rp"
  "cServiceExampleRequest\032\033.yyb.RpcServiceE"
  "xampleReply\"\000\022/\n\006Listen\022\n.yyb.Empty\032\025.yy"
  "b.PushNotification\"\0000\001\022H\n\005Login\022\021.yyb.Lo"
  "ginRequest\032\017.yyb.LoginReply\"\033\202\323\344\223\002\025\"\020/v1"
  "/example/echo:\001*\022:\n\014LoadGameData\022\024.yyb.G"
  "ameDataRequest\032\022.yyb.GameDataReply\"\000\022:\n\014"
  "SaveGameData\022\024.yyb.GameDataRequest\032\022.yyb"
  ".GameDataReply\"\000\0223\n\007Ranking\022\023.yyb.Rankin"
  "gRequest\032\021.yyb.RankingReply\"\000\022\?\n\013Ranking"
  "List\022\027.yyb.RankingListRequest\032\025.yyb.Rank"
  "ingListReply\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_rpc_5fservice_2eproto_deps[1] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_rpc_5fservice_2eproto_sccs[17] = {
  &scc_info_Empty_rpc_5fservice_2eproto.base,
  &scc_info_GameDataReply_rpc_5fservice_2eproto.base,
  &scc_info_GameDataRequest_rpc_5fservice_2eproto.base,
  &scc_info_Item_rpc_5fservice_2eproto.base,
  &scc_info_LoginReply_rpc_5fservice_2eproto.base,
  &scc_info_LoginRequest_rpc_5fservice_2eproto.base,
  &scc_info_Mercenary_rpc_5fservice_2eproto.base,
  &scc_info_PushNotification_rpc_5fservice_2eproto.base,
  &scc_info_RankingListReply_rpc_5fservice_2eproto.base,
  &scc_info_RankingListReply_Ranking_rpc_5fservice_2eproto.base,
  &scc_info_RankingListRequest_rpc_5fservice_2eproto.base,
  &scc_info_RankingReply_rpc_5fservice_2eproto.base,
  &scc_info_RankingRequest_rpc_5fservice_2eproto.base,
  &scc_info_RpcServiceExampleReply_rpc_5fservice_2eproto.base,
  &scc_info_RpcServiceExampleRequest_rpc_5fservice_2eproto.base,
  &scc_info_Stage_rpc_5fservice_2eproto.base,
  &scc_info_UpgradePlayer_rpc_5fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_rpc_5fservice_2eproto_once;
static bool descriptor_table_rpc_5fservice_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_rpc_5fservice_2eproto = {
  &descriptor_table_rpc_5fservice_2eproto_initialized, descriptor_table_protodef_rpc_5fservice_2eproto, "rpc_service.proto", 3142,
  &descriptor_table_rpc_5fservice_2eproto_once, descriptor_table_rpc_5fservice_2eproto_sccs, descriptor_table_rpc_5fservice_2eproto_deps, 17, 1,
  schemas, file_default_instances, TableStruct_rpc_5fservice_2eproto::offsets,
  file_level_metadata_rpc_5fservice_2eproto, 17, file_level_enum_descriptors_rpc_5fservice_2eproto, file_level_service_descriptors_rpc_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_rpc_5fservice_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_rpc_5fservice_2eproto), true);
namespace yyb {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LoginRequest_LOGIN_TYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_rpc_5fservice_2eproto);
  return file_level_enum_descriptors_rpc_5fservice_2eproto[0];
}
bool LoginRequest_LOGIN_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr LoginRequest_LOGIN_TYPE LoginRequest::LOGIN_TYPE_NON_CERT;
constexpr LoginRequest_LOGIN_TYPE LoginRequest::LOGIN_TYPE_GOOGLE;
constexpr LoginRequest_LOGIN_TYPE LoginRequest::LOGIN_TYPE_FACEBOOK;
constexpr LoginRequest_LOGIN_TYPE LoginRequest::LOGIN_TYPE_MIN;
constexpr LoginRequest_LOGIN_TYPE LoginRequest::LOGIN_TYPE_MAX;
constexpr int LoginRequest::LOGIN_TYPE_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ERROR_CODE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_rpc_5fservice_2eproto);
  return file_level_enum_descriptors_rpc_5fservice_2eproto[1];
}
bool ERROR_CODE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ITEM_TYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_rpc_5fservice_2eproto);
  return file_level_enum_descriptors_rpc_5fservice_2eproto[2];
}
bool ITEM_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ITEM_CATEGORY_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_rpc_5fservice_2eproto);
  return file_level_enum_descriptors_rpc_5fservice_2eproto[3];
}
bool ITEM_CATEGORY_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void RpcServiceExampleRequest::InitAsDefaultInstance() {
}
class RpcServiceExampleRequest::_Internal {
 public:
};

RpcServiceExampleRequest::RpcServiceExampleRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.RpcServiceExampleRequest)
}
RpcServiceExampleRequest::RpcServiceExampleRequest(const RpcServiceExampleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      arg5_(from.arg5_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  arg3_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_arg3().empty()) {
    arg3_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.arg3_);
  }
  ::memcpy(&arg1_, &from.arg1_,
    static_cast<size_t>(reinterpret_cast<char*>(&arg4_) -
    reinterpret_cast<char*>(&arg1_)) + sizeof(arg4_));
  // @@protoc_insertion_point(copy_constructor:yyb.RpcServiceExampleRequest)
}

void RpcServiceExampleRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RpcServiceExampleRequest_rpc_5fservice_2eproto.base);
  arg3_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&arg1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&arg4_) -
      reinterpret_cast<char*>(&arg1_)) + sizeof(arg4_));
}

RpcServiceExampleRequest::~RpcServiceExampleRequest() {
  // @@protoc_insertion_point(destructor:yyb.RpcServiceExampleRequest)
  SharedDtor();
}

void RpcServiceExampleRequest::SharedDtor() {
  arg3_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RpcServiceExampleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RpcServiceExampleRequest& RpcServiceExampleRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RpcServiceExampleRequest_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RpcServiceExampleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.RpcServiceExampleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arg5_.Clear();
  arg3_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&arg1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&arg4_) -
      reinterpret_cast<char*>(&arg1_)) + sizeof(arg4_));
  _internal_metadata_.Clear();
}

const char* RpcServiceExampleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 arg1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          arg1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float arg2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          arg2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // string arg3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_arg3();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.RpcServiceExampleRequest.arg3"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool arg4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          arg4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 arg5 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_arg5(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40) {
          _internal_add_arg5(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RpcServiceExampleRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.RpcServiceExampleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 arg1 = 1;
  if (this->arg1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_arg1(), target);
  }

  // float arg2 = 2;
  if (!(this->arg2() <= 0 && this->arg2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_arg2(), target);
  }

  // string arg3 = 3;
  if (this->arg3().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_arg3().data(), static_cast<int>(this->_internal_arg3().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.RpcServiceExampleRequest.arg3");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_arg3(), target);
  }

  // bool arg4 = 4;
  if (this->arg4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_arg4(), target);
  }

  // repeated int32 arg5 = 5;
  {
    int byte_size = _arg5_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          5, _internal_arg5(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.RpcServiceExampleRequest)
  return target;
}

size_t RpcServiceExampleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.RpcServiceExampleRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 arg5 = 5;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->arg5_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _arg5_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string arg3 = 3;
  if (this->arg3().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_arg3());
  }

  // int32 arg1 = 1;
  if (this->arg1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_arg1());
  }

  // float arg2 = 2;
  if (!(this->arg2() <= 0 && this->arg2() >= 0)) {
    total_size += 1 + 4;
  }

  // bool arg4 = 4;
  if (this->arg4() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RpcServiceExampleRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.RpcServiceExampleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RpcServiceExampleRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RpcServiceExampleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.RpcServiceExampleRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.RpcServiceExampleRequest)
    MergeFrom(*source);
  }
}

void RpcServiceExampleRequest::MergeFrom(const RpcServiceExampleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.RpcServiceExampleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arg5_.MergeFrom(from.arg5_);
  if (from.arg3().size() > 0) {

    arg3_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.arg3_);
  }
  if (from.arg1() != 0) {
    _internal_set_arg1(from._internal_arg1());
  }
  if (!(from.arg2() <= 0 && from.arg2() >= 0)) {
    _internal_set_arg2(from._internal_arg2());
  }
  if (from.arg4() != 0) {
    _internal_set_arg4(from._internal_arg4());
  }
}

void RpcServiceExampleRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.RpcServiceExampleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcServiceExampleRequest::CopyFrom(const RpcServiceExampleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.RpcServiceExampleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcServiceExampleRequest::IsInitialized() const {
  return true;
}

void RpcServiceExampleRequest::InternalSwap(RpcServiceExampleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  arg5_.InternalSwap(&other->arg5_);
  arg3_.Swap(&other->arg3_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(arg1_, other->arg1_);
  swap(arg2_, other->arg2_);
  swap(arg4_, other->arg4_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RpcServiceExampleRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RpcServiceExampleReply::InitAsDefaultInstance() {
}
class RpcServiceExampleReply::_Internal {
 public:
};

RpcServiceExampleReply::RpcServiceExampleReply()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.RpcServiceExampleReply)
}
RpcServiceExampleReply::RpcServiceExampleReply(const RpcServiceExampleReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:yyb.RpcServiceExampleReply)
}

void RpcServiceExampleReply::SharedCtor() {
  error_ = 0;
}

RpcServiceExampleReply::~RpcServiceExampleReply() {
  // @@protoc_insertion_point(destructor:yyb.RpcServiceExampleReply)
  SharedDtor();
}

void RpcServiceExampleReply::SharedDtor() {
}

void RpcServiceExampleReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RpcServiceExampleReply& RpcServiceExampleReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RpcServiceExampleReply_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RpcServiceExampleReply::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.RpcServiceExampleReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_ = 0;
  _internal_metadata_.Clear();
}

const char* RpcServiceExampleReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .yyb.ERROR_CODE error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_error(static_cast<::yyb::ERROR_CODE>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RpcServiceExampleReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.RpcServiceExampleReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yyb.ERROR_CODE error = 1;
  if (this->error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.RpcServiceExampleReply)
  return target;
}

size_t RpcServiceExampleReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.RpcServiceExampleReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .yyb.ERROR_CODE error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_error());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RpcServiceExampleReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.RpcServiceExampleReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RpcServiceExampleReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RpcServiceExampleReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.RpcServiceExampleReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.RpcServiceExampleReply)
    MergeFrom(*source);
  }
}

void RpcServiceExampleReply::MergeFrom(const RpcServiceExampleReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.RpcServiceExampleReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error() != 0) {
    _internal_set_error(from._internal_error());
  }
}

void RpcServiceExampleReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.RpcServiceExampleReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcServiceExampleReply::CopyFrom(const RpcServiceExampleReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.RpcServiceExampleReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcServiceExampleReply::IsInitialized() const {
  return true;
}

void RpcServiceExampleReply::InternalSwap(RpcServiceExampleReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RpcServiceExampleReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
class Empty::_Internal {
 public:
};

Empty::Empty()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.Empty)
}
Empty::Empty(const Empty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:yyb.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:yyb.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Empty& Empty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Empty_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Empty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Empty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.Empty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Empty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.Empty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Empty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PushNotification::InitAsDefaultInstance() {
}
class PushNotification::_Internal {
 public:
};

PushNotification::PushNotification()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.PushNotification)
}
PushNotification::PushNotification(const PushNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payload().empty()) {
    payload_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  // @@protoc_insertion_point(copy_constructor:yyb.PushNotification)
}

void PushNotification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PushNotification_rpc_5fservice_2eproto.base);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PushNotification::~PushNotification() {
  // @@protoc_insertion_point(destructor:yyb.PushNotification)
  SharedDtor();
}

void PushNotification::SharedDtor() {
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PushNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PushNotification& PushNotification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PushNotification_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void PushNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.PushNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* PushNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string payload = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.PushNotification.payload"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PushNotification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.PushNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string payload = 1;
  if (this->payload().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payload().data(), static_cast<int>(this->_internal_payload().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.PushNotification.payload");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_payload(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.PushNotification)
  return target;
}

size_t PushNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.PushNotification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payload = 1;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payload());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PushNotification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.PushNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const PushNotification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PushNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.PushNotification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.PushNotification)
    MergeFrom(*source);
  }
}

void PushNotification::MergeFrom(const PushNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.PushNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
}

void PushNotification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.PushNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushNotification::CopyFrom(const PushNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.PushNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushNotification::IsInitialized() const {
  return true;
}

void PushNotification::InternalSwap(PushNotification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  payload_.Swap(&other->payload_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata PushNotification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoginRequest::InitAsDefaultInstance() {
}
class LoginRequest::_Internal {
 public:
};

LoginRequest::LoginRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.LoginRequest)
}
LoginRequest::LoginRequest(const LoginRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  loginkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_loginkey().empty()) {
    loginkey_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.loginkey_);
  }
  idtoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_idtoken().empty()) {
    idtoken_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.idtoken_);
  }
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nickname().empty()) {
    nickname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  logintype_ = from.logintype_;
  // @@protoc_insertion_point(copy_constructor:yyb.LoginRequest)
}

void LoginRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoginRequest_rpc_5fservice_2eproto.base);
  loginkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  idtoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  logintype_ = 0;
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:yyb.LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  loginkey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  idtoken_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LoginRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginRequest& LoginRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoginRequest_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.LoginRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  loginkey_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  idtoken_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nickname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  logintype_ = 0;
  _internal_metadata_.Clear();
}

const char* LoginRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .yyb.LoginRequest.LOGIN_TYPE loginType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_logintype(static_cast<::yyb::LoginRequest_LOGIN_TYPE>(val));
        } else goto handle_unusual;
        continue;
      // string loginKey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_loginkey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.LoginRequest.loginKey"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string idToken = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_idtoken();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.LoginRequest.idToken"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string nickName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_nickname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.LoginRequest.nickName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoginRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.LoginRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yyb.LoginRequest.LOGIN_TYPE loginType = 1;
  if (this->logintype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_logintype(), target);
  }

  // string loginKey = 2;
  if (this->loginkey().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_loginkey().data(), static_cast<int>(this->_internal_loginkey().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.LoginRequest.loginKey");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_loginkey(), target);
  }

  // string idToken = 3;
  if (this->idtoken().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_idtoken().data(), static_cast<int>(this->_internal_idtoken().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.LoginRequest.idToken");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_idtoken(), target);
  }

  // string nickName = 4;
  if (this->nickname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.LoginRequest.nickName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_nickname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.LoginRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string loginKey = 2;
  if (this->loginkey().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_loginkey());
  }

  // string idToken = 3;
  if (this->idtoken().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_idtoken());
  }

  // string nickName = 4;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // .yyb.LoginRequest.LOGIN_TYPE loginType = 1;
  if (this->logintype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_logintype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoginRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.LoginRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.LoginRequest)
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.loginkey().size() > 0) {

    loginkey_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.loginkey_);
  }
  if (from.idtoken().size() > 0) {

    idtoken_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.idtoken_);
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.logintype() != 0) {
    _internal_set_logintype(from._internal_logintype());
  }
}

void LoginRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  return true;
}

void LoginRequest::InternalSwap(LoginRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  loginkey_.Swap(&other->loginkey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  idtoken_.Swap(&other->idtoken_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nickname_.Swap(&other->nickname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(logintype_, other->logintype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoginReply::InitAsDefaultInstance() {
}
class LoginReply::_Internal {
 public:
};

LoginReply::LoginReply()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.LoginReply)
}
LoginReply::LoginReply(const LoginReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nickname().empty()) {
    nickname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  loginkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_loginkey().empty()) {
    loginkey_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.loginkey_);
  }
  accesskey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accesskey().empty()) {
    accesskey_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.accesskey_);
  }
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&usn_) -
    reinterpret_cast<char*>(&error_)) + sizeof(usn_));
  // @@protoc_insertion_point(copy_constructor:yyb.LoginReply)
}

void LoginReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoginReply_rpc_5fservice_2eproto.base);
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  loginkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accesskey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usn_) -
      reinterpret_cast<char*>(&error_)) + sizeof(usn_));
}

LoginReply::~LoginReply() {
  // @@protoc_insertion_point(destructor:yyb.LoginReply)
  SharedDtor();
}

void LoginReply::SharedDtor() {
  nickname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  loginkey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accesskey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LoginReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginReply& LoginReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoginReply_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void LoginReply::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.LoginReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nickname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  loginkey_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accesskey_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usn_) -
      reinterpret_cast<char*>(&error_)) + sizeof(usn_));
  _internal_metadata_.Clear();
}

const char* LoginReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .yyb.ERROR_CODE error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_error(static_cast<::yyb::ERROR_CODE>(val));
        } else goto handle_unusual;
        continue;
      // int32 usn = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          usn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string nickName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_nickname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.LoginReply.nickName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string loginKey = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_loginkey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.LoginReply.loginKey"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string accessKey = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_accesskey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.LoginReply.accessKey"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoginReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.LoginReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yyb.ERROR_CODE error = 1;
  if (this->error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_error(), target);
  }

  // int32 usn = 2;
  if (this->usn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_usn(), target);
  }

  // string nickName = 3;
  if (this->nickname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.LoginReply.nickName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_nickname(), target);
  }

  // string loginKey = 4;
  if (this->loginkey().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_loginkey().data(), static_cast<int>(this->_internal_loginkey().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.LoginReply.loginKey");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_loginkey(), target);
  }

  // string accessKey = 5;
  if (this->accesskey().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accesskey().data(), static_cast<int>(this->_internal_accesskey().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.LoginReply.accessKey");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_accesskey(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.LoginReply)
  return target;
}

size_t LoginReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.LoginReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickName = 3;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // string loginKey = 4;
  if (this->loginkey().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_loginkey());
  }

  // string accessKey = 5;
  if (this->accesskey().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accesskey());
  }

  // .yyb.ERROR_CODE error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_error());
  }

  // int32 usn = 2;
  if (this->usn() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_usn());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.LoginReply)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoginReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.LoginReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.LoginReply)
    MergeFrom(*source);
  }
}

void LoginReply::MergeFrom(const LoginReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.LoginReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.loginkey().size() > 0) {

    loginkey_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.loginkey_);
  }
  if (from.accesskey().size() > 0) {

    accesskey_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.accesskey_);
  }
  if (from.error() != 0) {
    _internal_set_error(from._internal_error());
  }
  if (from.usn() != 0) {
    _internal_set_usn(from._internal_usn());
  }
}

void LoginReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.LoginReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReply::CopyFrom(const LoginReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.LoginReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReply::IsInitialized() const {
  return true;
}

void LoginReply::InternalSwap(LoginReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  nickname_.Swap(&other->nickname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  loginkey_.Swap(&other->loginkey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  accesskey_.Swap(&other->accesskey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  swap(usn_, other->usn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Item::InitAsDefaultInstance() {
}
class Item::_Internal {
 public:
};

Item::Item()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.Item)
}
Item::Item(const Item& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  itemname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_itemname().empty()) {
    itemname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.itemname_);
  }
  ::memcpy(&itemtype_, &from.itemtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&itemcount_) -
    reinterpret_cast<char*>(&itemtype_)) + sizeof(itemcount_));
  // @@protoc_insertion_point(copy_constructor:yyb.Item)
}

void Item::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Item_rpc_5fservice_2eproto.base);
  itemname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&itemtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&itemcount_) -
      reinterpret_cast<char*>(&itemtype_)) + sizeof(itemcount_));
}

Item::~Item() {
  // @@protoc_insertion_point(destructor:yyb.Item)
  SharedDtor();
}

void Item::SharedDtor() {
  itemname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Item& Item::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Item_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void Item::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.Item)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  itemname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&itemtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&itemcount_) -
      reinterpret_cast<char*>(&itemtype_)) + sizeof(itemcount_));
  _internal_metadata_.Clear();
}

const char* Item::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string itemName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_itemname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.Item.itemName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .yyb.ITEM_TYPE itemType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_itemtype(static_cast<::yyb::ITEM_TYPE>(val));
        } else goto handle_unusual;
        continue;
      // .yyb.ITEM_CATEGORY itemCategory = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_itemcategory(static_cast<::yyb::ITEM_CATEGORY>(val));
        } else goto handle_unusual;
        continue;
      // int32 itemCount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          itemcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Item::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.Item)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string itemName = 1;
  if (this->itemname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_itemname().data(), static_cast<int>(this->_internal_itemname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.Item.itemName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_itemname(), target);
  }

  // .yyb.ITEM_TYPE itemType = 2;
  if (this->itemtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_itemtype(), target);
  }

  // .yyb.ITEM_CATEGORY itemCategory = 3;
  if (this->itemcategory() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_itemcategory(), target);
  }

  // int32 itemCount = 4;
  if (this->itemcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_itemcount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.Item)
  return target;
}

size_t Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.Item)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string itemName = 1;
  if (this->itemname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_itemname());
  }

  // .yyb.ITEM_TYPE itemType = 2;
  if (this->itemtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_itemtype());
  }

  // .yyb.ITEM_CATEGORY itemCategory = 3;
  if (this->itemcategory() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_itemcategory());
  }

  // int32 itemCount = 4;
  if (this->itemcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_itemcount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Item::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const Item* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Item>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.Item)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.Item)
    MergeFrom(*source);
  }
}

void Item::MergeFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.itemname().size() > 0) {

    itemname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.itemname_);
  }
  if (from.itemtype() != 0) {
    _internal_set_itemtype(from._internal_itemtype());
  }
  if (from.itemcategory() != 0) {
    _internal_set_itemcategory(from._internal_itemcategory());
  }
  if (from.itemcount() != 0) {
    _internal_set_itemcount(from._internal_itemcount());
  }
}

void Item::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Item::CopyFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Item::IsInitialized() const {
  return true;
}

void Item::InternalSwap(Item* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  itemname_.Swap(&other->itemname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(itemtype_, other->itemtype_);
  swap(itemcategory_, other->itemcategory_);
  swap(itemcount_, other->itemcount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Item::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Mercenary::InitAsDefaultInstance() {
}
class Mercenary::_Internal {
 public:
};

Mercenary::Mercenary()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.Mercenary)
}
Mercenary::Mercenary(const Mercenary& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mercenaryname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mercenaryname().empty()) {
    mercenaryname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.mercenaryname_);
  }
  mercenarylevel_ = from.mercenarylevel_;
  // @@protoc_insertion_point(copy_constructor:yyb.Mercenary)
}

void Mercenary::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Mercenary_rpc_5fservice_2eproto.base);
  mercenaryname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mercenarylevel_ = 0;
}

Mercenary::~Mercenary() {
  // @@protoc_insertion_point(destructor:yyb.Mercenary)
  SharedDtor();
}

void Mercenary::SharedDtor() {
  mercenaryname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Mercenary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Mercenary& Mercenary::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Mercenary_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void Mercenary::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.Mercenary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mercenaryname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mercenarylevel_ = 0;
  _internal_metadata_.Clear();
}

const char* Mercenary::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mercenaryName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mercenaryname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.Mercenary.mercenaryName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 mercenaryLevel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          mercenarylevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Mercenary::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.Mercenary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mercenaryName = 1;
  if (this->mercenaryname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mercenaryname().data(), static_cast<int>(this->_internal_mercenaryname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.Mercenary.mercenaryName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mercenaryname(), target);
  }

  // int32 mercenaryLevel = 2;
  if (this->mercenarylevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_mercenarylevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.Mercenary)
  return target;
}

size_t Mercenary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.Mercenary)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mercenaryName = 1;
  if (this->mercenaryname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mercenaryname());
  }

  // int32 mercenaryLevel = 2;
  if (this->mercenarylevel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_mercenarylevel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Mercenary::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.Mercenary)
  GOOGLE_DCHECK_NE(&from, this);
  const Mercenary* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Mercenary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.Mercenary)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.Mercenary)
    MergeFrom(*source);
  }
}

void Mercenary::MergeFrom(const Mercenary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.Mercenary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mercenaryname().size() > 0) {

    mercenaryname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.mercenaryname_);
  }
  if (from.mercenarylevel() != 0) {
    _internal_set_mercenarylevel(from._internal_mercenarylevel());
  }
}

void Mercenary::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.Mercenary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mercenary::CopyFrom(const Mercenary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.Mercenary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mercenary::IsInitialized() const {
  return true;
}

void Mercenary::InternalSwap(Mercenary* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  mercenaryname_.Swap(&other->mercenaryname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mercenarylevel_, other->mercenarylevel_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Mercenary::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Stage::InitAsDefaultInstance() {
}
class Stage::_Internal {
 public:
};

Stage::Stage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.Stage)
}
Stage::Stage(const Stage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stagescore_, &from.stagescore_,
    static_cast<size_t>(reinterpret_cast<char*>(&stagenum_) -
    reinterpret_cast<char*>(&stagescore_)) + sizeof(stagenum_));
  // @@protoc_insertion_point(copy_constructor:yyb.Stage)
}

void Stage::SharedCtor() {
  ::memset(&stagescore_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stagenum_) -
      reinterpret_cast<char*>(&stagescore_)) + sizeof(stagenum_));
}

Stage::~Stage() {
  // @@protoc_insertion_point(destructor:yyb.Stage)
  SharedDtor();
}

void Stage::SharedDtor() {
}

void Stage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Stage& Stage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Stage_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void Stage::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.Stage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&stagescore_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stagenum_) -
      reinterpret_cast<char*>(&stagescore_)) + sizeof(stagenum_));
  _internal_metadata_.Clear();
}

const char* Stage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 stageNum = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          stagenum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 stageScore = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          stagescore_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Stage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.Stage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 stageNum = 1;
  if (this->stagenum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_stagenum(), target);
  }

  // int64 stageScore = 2;
  if (this->stagescore() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_stagescore(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.Stage)
  return target;
}

size_t Stage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.Stage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 stageScore = 2;
  if (this->stagescore() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_stagescore());
  }

  // int32 stageNum = 1;
  if (this->stagenum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_stagenum());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Stage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.Stage)
  GOOGLE_DCHECK_NE(&from, this);
  const Stage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Stage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.Stage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.Stage)
    MergeFrom(*source);
  }
}

void Stage::MergeFrom(const Stage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.Stage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stagescore() != 0) {
    _internal_set_stagescore(from._internal_stagescore());
  }
  if (from.stagenum() != 0) {
    _internal_set_stagenum(from._internal_stagenum());
  }
}

void Stage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.Stage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stage::CopyFrom(const Stage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.Stage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stage::IsInitialized() const {
  return true;
}

void Stage::InternalSwap(Stage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(stagescore_, other->stagescore_);
  swap(stagenum_, other->stagenum_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Stage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpgradePlayer::InitAsDefaultInstance() {
}
class UpgradePlayer::_Internal {
 public:
};

UpgradePlayer::UpgradePlayer()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.UpgradePlayer)
}
UpgradePlayer::UpgradePlayer(const UpgradePlayer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&powerlevel_, &from.powerlevel_,
    static_cast<size_t>(reinterpret_cast<char*>(&freecoinlevel_) -
    reinterpret_cast<char*>(&powerlevel_)) + sizeof(freecoinlevel_));
  // @@protoc_insertion_point(copy_constructor:yyb.UpgradePlayer)
}

void UpgradePlayer::SharedCtor() {
  ::memset(&powerlevel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&freecoinlevel_) -
      reinterpret_cast<char*>(&powerlevel_)) + sizeof(freecoinlevel_));
}

UpgradePlayer::~UpgradePlayer() {
  // @@protoc_insertion_point(destructor:yyb.UpgradePlayer)
  SharedDtor();
}

void UpgradePlayer::SharedDtor() {
}

void UpgradePlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpgradePlayer& UpgradePlayer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpgradePlayer_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void UpgradePlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.UpgradePlayer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&powerlevel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&freecoinlevel_) -
      reinterpret_cast<char*>(&powerlevel_)) + sizeof(freecoinlevel_));
  _internal_metadata_.Clear();
}

const char* UpgradePlayer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 powerLevel = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          powerlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 attackSpeedLevel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          attackspeedlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 criticalLevel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          criticallevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 buffDurationLevel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          buffdurationlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 freeCoinLevel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          freecoinlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpgradePlayer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.UpgradePlayer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 powerLevel = 1;
  if (this->powerlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_powerlevel(), target);
  }

  // int32 attackSpeedLevel = 2;
  if (this->attackspeedlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_attackspeedlevel(), target);
  }

  // int32 criticalLevel = 3;
  if (this->criticallevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_criticallevel(), target);
  }

  // int32 buffDurationLevel = 4;
  if (this->buffdurationlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_buffdurationlevel(), target);
  }

  // int32 freeCoinLevel = 5;
  if (this->freecoinlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_freecoinlevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.UpgradePlayer)
  return target;
}

size_t UpgradePlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.UpgradePlayer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 powerLevel = 1;
  if (this->powerlevel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_powerlevel());
  }

  // int32 attackSpeedLevel = 2;
  if (this->attackspeedlevel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_attackspeedlevel());
  }

  // int32 criticalLevel = 3;
  if (this->criticallevel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_criticallevel());
  }

  // int32 buffDurationLevel = 4;
  if (this->buffdurationlevel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_buffdurationlevel());
  }

  // int32 freeCoinLevel = 5;
  if (this->freecoinlevel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_freecoinlevel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpgradePlayer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.UpgradePlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const UpgradePlayer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpgradePlayer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.UpgradePlayer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.UpgradePlayer)
    MergeFrom(*source);
  }
}

void UpgradePlayer::MergeFrom(const UpgradePlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.UpgradePlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.powerlevel() != 0) {
    _internal_set_powerlevel(from._internal_powerlevel());
  }
  if (from.attackspeedlevel() != 0) {
    _internal_set_attackspeedlevel(from._internal_attackspeedlevel());
  }
  if (from.criticallevel() != 0) {
    _internal_set_criticallevel(from._internal_criticallevel());
  }
  if (from.buffdurationlevel() != 0) {
    _internal_set_buffdurationlevel(from._internal_buffdurationlevel());
  }
  if (from.freecoinlevel() != 0) {
    _internal_set_freecoinlevel(from._internal_freecoinlevel());
  }
}

void UpgradePlayer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.UpgradePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradePlayer::CopyFrom(const UpgradePlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.UpgradePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradePlayer::IsInitialized() const {
  return true;
}

void UpgradePlayer::InternalSwap(UpgradePlayer* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(powerlevel_, other->powerlevel_);
  swap(attackspeedlevel_, other->attackspeedlevel_);
  swap(criticallevel_, other->criticallevel_);
  swap(buffdurationlevel_, other->buffdurationlevel_);
  swap(freecoinlevel_, other->freecoinlevel_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpgradePlayer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GameDataRequest::InitAsDefaultInstance() {
  ::yyb::_GameDataRequest_default_instance_._instance.get_mutable()->stage_ = const_cast< ::yyb::Stage*>(
      ::yyb::Stage::internal_default_instance());
  ::yyb::_GameDataRequest_default_instance_._instance.get_mutable()->upgradeplayer_ = const_cast< ::yyb::UpgradePlayer*>(
      ::yyb::UpgradePlayer::internal_default_instance());
}
class GameDataRequest::_Internal {
 public:
  static const ::yyb::Stage& stage(const GameDataRequest* msg);
  static const ::yyb::UpgradePlayer& upgradeplayer(const GameDataRequest* msg);
};

const ::yyb::Stage&
GameDataRequest::_Internal::stage(const GameDataRequest* msg) {
  return *msg->stage_;
}
const ::yyb::UpgradePlayer&
GameDataRequest::_Internal::upgradeplayer(const GameDataRequest* msg) {
  return *msg->upgradeplayer_;
}
GameDataRequest::GameDataRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.GameDataRequest)
}
GameDataRequest::GameDataRequest(const GameDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      items_(from.items_),
      mercenaries_(from.mercenaries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_stage()) {
    stage_ = new ::yyb::Stage(*from.stage_);
  } else {
    stage_ = nullptr;
  }
  if (from._internal_has_upgradeplayer()) {
    upgradeplayer_ = new ::yyb::UpgradePlayer(*from.upgradeplayer_);
  } else {
    upgradeplayer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:yyb.GameDataRequest)
}

void GameDataRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GameDataRequest_rpc_5fservice_2eproto.base);
  ::memset(&stage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upgradeplayer_) -
      reinterpret_cast<char*>(&stage_)) + sizeof(upgradeplayer_));
}

GameDataRequest::~GameDataRequest() {
  // @@protoc_insertion_point(destructor:yyb.GameDataRequest)
  SharedDtor();
}

void GameDataRequest::SharedDtor() {
  if (this != internal_default_instance()) delete stage_;
  if (this != internal_default_instance()) delete upgradeplayer_;
}

void GameDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GameDataRequest& GameDataRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GameDataRequest_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GameDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.GameDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  mercenaries_.Clear();
  if (GetArenaNoVirtual() == nullptr && stage_ != nullptr) {
    delete stage_;
  }
  stage_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && upgradeplayer_ != nullptr) {
    delete upgradeplayer_;
  }
  upgradeplayer_ = nullptr;
  _internal_metadata_.Clear();
}

const char* GameDataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .yyb.Item items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .yyb.Mercenary mercenaries = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_mercenaries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .yyb.Stage stage = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_stage(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .yyb.UpgradePlayer upgradePlayer = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_upgradeplayer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GameDataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.GameDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .yyb.Item items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_items(i), target, stream);
  }

  // repeated .yyb.Mercenary mercenaries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_mercenaries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_mercenaries(i), target, stream);
  }

  // .yyb.Stage stage = 4;
  if (this->has_stage()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::stage(this), target, stream);
  }

  // .yyb.UpgradePlayer upgradePlayer = 5;
  if (this->has_upgradeplayer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::upgradeplayer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.GameDataRequest)
  return target;
}

size_t GameDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.GameDataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .yyb.Item items = 2;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .yyb.Mercenary mercenaries = 3;
  total_size += 1UL * this->_internal_mercenaries_size();
  for (const auto& msg : this->mercenaries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .yyb.Stage stage = 4;
  if (this->has_stage()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *stage_);
  }

  // .yyb.UpgradePlayer upgradePlayer = 5;
  if (this->has_upgradeplayer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *upgradeplayer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameDataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.GameDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GameDataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GameDataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.GameDataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.GameDataRequest)
    MergeFrom(*source);
  }
}

void GameDataRequest::MergeFrom(const GameDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.GameDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  mercenaries_.MergeFrom(from.mercenaries_);
  if (from.has_stage()) {
    _internal_mutable_stage()->::yyb::Stage::MergeFrom(from._internal_stage());
  }
  if (from.has_upgradeplayer()) {
    _internal_mutable_upgradeplayer()->::yyb::UpgradePlayer::MergeFrom(from._internal_upgradeplayer());
  }
}

void GameDataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.GameDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameDataRequest::CopyFrom(const GameDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.GameDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameDataRequest::IsInitialized() const {
  return true;
}

void GameDataRequest::InternalSwap(GameDataRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
  mercenaries_.InternalSwap(&other->mercenaries_);
  swap(stage_, other->stage_);
  swap(upgradeplayer_, other->upgradeplayer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GameDataRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GameDataReply::InitAsDefaultInstance() {
  ::yyb::_GameDataReply_default_instance_._instance.get_mutable()->stage_ = const_cast< ::yyb::Stage*>(
      ::yyb::Stage::internal_default_instance());
  ::yyb::_GameDataReply_default_instance_._instance.get_mutable()->upgradeplayer_ = const_cast< ::yyb::UpgradePlayer*>(
      ::yyb::UpgradePlayer::internal_default_instance());
}
class GameDataReply::_Internal {
 public:
  static const ::yyb::Stage& stage(const GameDataReply* msg);
  static const ::yyb::UpgradePlayer& upgradeplayer(const GameDataReply* msg);
};

const ::yyb::Stage&
GameDataReply::_Internal::stage(const GameDataReply* msg) {
  return *msg->stage_;
}
const ::yyb::UpgradePlayer&
GameDataReply::_Internal::upgradeplayer(const GameDataReply* msg) {
  return *msg->upgradeplayer_;
}
GameDataReply::GameDataReply()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.GameDataReply)
}
GameDataReply::GameDataReply(const GameDataReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      items_(from.items_),
      mercenaries_(from.mercenaries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_stage()) {
    stage_ = new ::yyb::Stage(*from.stage_);
  } else {
    stage_ = nullptr;
  }
  if (from._internal_has_upgradeplayer()) {
    upgradeplayer_ = new ::yyb::UpgradePlayer(*from.upgradeplayer_);
  } else {
    upgradeplayer_ = nullptr;
  }
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:yyb.GameDataReply)
}

void GameDataReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GameDataReply_rpc_5fservice_2eproto.base);
  ::memset(&stage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&stage_)) + sizeof(error_));
}

GameDataReply::~GameDataReply() {
  // @@protoc_insertion_point(destructor:yyb.GameDataReply)
  SharedDtor();
}

void GameDataReply::SharedDtor() {
  if (this != internal_default_instance()) delete stage_;
  if (this != internal_default_instance()) delete upgradeplayer_;
}

void GameDataReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GameDataReply& GameDataReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GameDataReply_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GameDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.GameDataReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  mercenaries_.Clear();
  if (GetArenaNoVirtual() == nullptr && stage_ != nullptr) {
    delete stage_;
  }
  stage_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && upgradeplayer_ != nullptr) {
    delete upgradeplayer_;
  }
  upgradeplayer_ = nullptr;
  error_ = 0;
  _internal_metadata_.Clear();
}

const char* GameDataReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .yyb.ERROR_CODE error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_error(static_cast<::yyb::ERROR_CODE>(val));
        } else goto handle_unusual;
        continue;
      // repeated .yyb.Item items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .yyb.Mercenary mercenaries = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_mercenaries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .yyb.Stage stage = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_stage(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .yyb.UpgradePlayer upgradePlayer = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_upgradeplayer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GameDataReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.GameDataReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yyb.ERROR_CODE error = 1;
  if (this->error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_error(), target);
  }

  // repeated .yyb.Item items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_items(i), target, stream);
  }

  // repeated .yyb.Mercenary mercenaries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_mercenaries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_mercenaries(i), target, stream);
  }

  // .yyb.Stage stage = 4;
  if (this->has_stage()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::stage(this), target, stream);
  }

  // .yyb.UpgradePlayer upgradePlayer = 5;
  if (this->has_upgradeplayer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::upgradeplayer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.GameDataReply)
  return target;
}

size_t GameDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.GameDataReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .yyb.Item items = 2;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .yyb.Mercenary mercenaries = 3;
  total_size += 1UL * this->_internal_mercenaries_size();
  for (const auto& msg : this->mercenaries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .yyb.Stage stage = 4;
  if (this->has_stage()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *stage_);
  }

  // .yyb.UpgradePlayer upgradePlayer = 5;
  if (this->has_upgradeplayer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *upgradeplayer_);
  }

  // .yyb.ERROR_CODE error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_error());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameDataReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.GameDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GameDataReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GameDataReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.GameDataReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.GameDataReply)
    MergeFrom(*source);
  }
}

void GameDataReply::MergeFrom(const GameDataReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.GameDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  mercenaries_.MergeFrom(from.mercenaries_);
  if (from.has_stage()) {
    _internal_mutable_stage()->::yyb::Stage::MergeFrom(from._internal_stage());
  }
  if (from.has_upgradeplayer()) {
    _internal_mutable_upgradeplayer()->::yyb::UpgradePlayer::MergeFrom(from._internal_upgradeplayer());
  }
  if (from.error() != 0) {
    _internal_set_error(from._internal_error());
  }
}

void GameDataReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.GameDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameDataReply::CopyFrom(const GameDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.GameDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameDataReply::IsInitialized() const {
  return true;
}

void GameDataReply::InternalSwap(GameDataReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
  mercenaries_.InternalSwap(&other->mercenaries_);
  swap(stage_, other->stage_);
  swap(upgradeplayer_, other->upgradeplayer_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GameDataReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RankingRequest::InitAsDefaultInstance() {
}
class RankingRequest::_Internal {
 public:
};

RankingRequest::RankingRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.RankingRequest)
}
RankingRequest::RankingRequest(const RankingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:yyb.RankingRequest)
}

void RankingRequest::SharedCtor() {
  score_ = PROTOBUF_LONGLONG(0);
}

RankingRequest::~RankingRequest() {
  // @@protoc_insertion_point(destructor:yyb.RankingRequest)
  SharedDtor();
}

void RankingRequest::SharedDtor() {
}

void RankingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RankingRequest& RankingRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RankingRequest_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RankingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.RankingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  score_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* RankingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 score = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RankingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.RankingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 score = 1;
  if (this->score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.RankingRequest)
  return target;
}

size_t RankingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.RankingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 score = 1;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_score());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RankingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.RankingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RankingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RankingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.RankingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.RankingRequest)
    MergeFrom(*source);
  }
}

void RankingRequest::MergeFrom(const RankingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.RankingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
}

void RankingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.RankingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankingRequest::CopyFrom(const RankingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.RankingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankingRequest::IsInitialized() const {
  return true;
}

void RankingRequest::InternalSwap(RankingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(score_, other->score_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RankingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RankingReply::InitAsDefaultInstance() {
}
class RankingReply::_Internal {
 public:
};

RankingReply::RankingReply()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.RankingReply)
}
RankingReply::RankingReply(const RankingReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:yyb.RankingReply)
}

void RankingReply::SharedCtor() {
  error_ = 0;
}

RankingReply::~RankingReply() {
  // @@protoc_insertion_point(destructor:yyb.RankingReply)
  SharedDtor();
}

void RankingReply::SharedDtor() {
}

void RankingReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RankingReply& RankingReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RankingReply_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RankingReply::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.RankingReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_ = 0;
  _internal_metadata_.Clear();
}

const char* RankingReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .yyb.ERROR_CODE error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_error(static_cast<::yyb::ERROR_CODE>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RankingReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.RankingReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yyb.ERROR_CODE error = 1;
  if (this->error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.RankingReply)
  return target;
}

size_t RankingReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.RankingReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .yyb.ERROR_CODE error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_error());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RankingReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.RankingReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RankingReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RankingReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.RankingReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.RankingReply)
    MergeFrom(*source);
  }
}

void RankingReply::MergeFrom(const RankingReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.RankingReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error() != 0) {
    _internal_set_error(from._internal_error());
  }
}

void RankingReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.RankingReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankingReply::CopyFrom(const RankingReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.RankingReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankingReply::IsInitialized() const {
  return true;
}

void RankingReply::InternalSwap(RankingReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RankingReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RankingListRequest::InitAsDefaultInstance() {
}
class RankingListRequest::_Internal {
 public:
};

RankingListRequest::RankingListRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.RankingListRequest)
}
RankingListRequest::RankingListRequest(const RankingListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:yyb.RankingListRequest)
}

void RankingListRequest::SharedCtor() {
}

RankingListRequest::~RankingListRequest() {
  // @@protoc_insertion_point(destructor:yyb.RankingListRequest)
  SharedDtor();
}

void RankingListRequest::SharedDtor() {
}

void RankingListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RankingListRequest& RankingListRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RankingListRequest_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RankingListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.RankingListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* RankingListRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RankingListRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.RankingListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.RankingListRequest)
  return target;
}

size_t RankingListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.RankingListRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RankingListRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.RankingListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RankingListRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RankingListRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.RankingListRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.RankingListRequest)
    MergeFrom(*source);
  }
}

void RankingListRequest::MergeFrom(const RankingListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.RankingListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RankingListRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.RankingListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankingListRequest::CopyFrom(const RankingListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.RankingListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankingListRequest::IsInitialized() const {
  return true;
}

void RankingListRequest::InternalSwap(RankingListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RankingListRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RankingListReply_Ranking::InitAsDefaultInstance() {
}
class RankingListReply_Ranking::_Internal {
 public:
};

RankingListReply_Ranking::RankingListReply_Ranking()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.RankingListReply.Ranking)
}
RankingListReply_Ranking::RankingListReply_Ranking(const RankingListReply_Ranking& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nickname().empty()) {
    nickname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&rank_, &from.rank_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&rank_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:yyb.RankingListReply.Ranking)
}

void RankingListReply_Ranking::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RankingListReply_Ranking_rpc_5fservice_2eproto.base);
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&rank_)) + sizeof(score_));
}

RankingListReply_Ranking::~RankingListReply_Ranking() {
  // @@protoc_insertion_point(destructor:yyb.RankingListReply.Ranking)
  SharedDtor();
}

void RankingListReply_Ranking::SharedDtor() {
  nickname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RankingListReply_Ranking::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RankingListReply_Ranking& RankingListReply_Ranking::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RankingListReply_Ranking_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RankingListReply_Ranking::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.RankingListReply.Ranking)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nickname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&rank_)) + sizeof(score_));
  _internal_metadata_.Clear();
}

const char* RankingListReply_Ranking::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string nickName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_nickname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.RankingListReply.Ranking.nickName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 rank = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 score = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RankingListReply_Ranking::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.RankingListReply.Ranking)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nickName = 1;
  if (this->nickname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.RankingListReply.Ranking.nickName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_nickname(), target);
  }

  // int32 rank = 2;
  if (this->rank() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_rank(), target);
  }

  // int32 score = 3;
  if (this->score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.RankingListReply.Ranking)
  return target;
}

size_t RankingListReply_Ranking::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.RankingListReply.Ranking)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickName = 1;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // int32 rank = 2;
  if (this->rank() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rank());
  }

  // int32 score = 3;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_score());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RankingListReply_Ranking::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.RankingListReply.Ranking)
  GOOGLE_DCHECK_NE(&from, this);
  const RankingListReply_Ranking* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RankingListReply_Ranking>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.RankingListReply.Ranking)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.RankingListReply.Ranking)
    MergeFrom(*source);
  }
}

void RankingListReply_Ranking::MergeFrom(const RankingListReply_Ranking& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.RankingListReply.Ranking)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.rank() != 0) {
    _internal_set_rank(from._internal_rank());
  }
  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
}

void RankingListReply_Ranking::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.RankingListReply.Ranking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankingListReply_Ranking::CopyFrom(const RankingListReply_Ranking& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.RankingListReply.Ranking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankingListReply_Ranking::IsInitialized() const {
  return true;
}

void RankingListReply_Ranking::InternalSwap(RankingListReply_Ranking* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  nickname_.Swap(&other->nickname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rank_, other->rank_);
  swap(score_, other->score_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RankingListReply_Ranking::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RankingListReply::InitAsDefaultInstance() {
  ::yyb::_RankingListReply_default_instance_._instance.get_mutable()->myranking_ = const_cast< ::yyb::RankingListReply_Ranking*>(
      ::yyb::RankingListReply_Ranking::internal_default_instance());
}
class RankingListReply::_Internal {
 public:
  static const ::yyb::RankingListReply_Ranking& myranking(const RankingListReply* msg);
};

const ::yyb::RankingListReply_Ranking&
RankingListReply::_Internal::myranking(const RankingListReply* msg) {
  return *msg->myranking_;
}
RankingListReply::RankingListReply()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.RankingListReply)
}
RankingListReply::RankingListReply(const RankingListReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      rankings_(from.rankings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_myranking()) {
    myranking_ = new ::yyb::RankingListReply_Ranking(*from.myranking_);
  } else {
    myranking_ = nullptr;
  }
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:yyb.RankingListReply)
}

void RankingListReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RankingListReply_rpc_5fservice_2eproto.base);
  ::memset(&myranking_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&myranking_)) + sizeof(error_));
}

RankingListReply::~RankingListReply() {
  // @@protoc_insertion_point(destructor:yyb.RankingListReply)
  SharedDtor();
}

void RankingListReply::SharedDtor() {
  if (this != internal_default_instance()) delete myranking_;
}

void RankingListReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RankingListReply& RankingListReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RankingListReply_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RankingListReply::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.RankingListReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rankings_.Clear();
  if (GetArenaNoVirtual() == nullptr && myranking_ != nullptr) {
    delete myranking_;
  }
  myranking_ = nullptr;
  error_ = 0;
  _internal_metadata_.Clear();
}

const char* RankingListReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .yyb.ERROR_CODE error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_error(static_cast<::yyb::ERROR_CODE>(val));
        } else goto handle_unusual;
        continue;
      // .yyb.RankingListReply.Ranking myRanking = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_myranking(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .yyb.RankingListReply.Ranking rankings = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rankings(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RankingListReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.RankingListReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yyb.ERROR_CODE error = 1;
  if (this->error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_error(), target);
  }

  // .yyb.RankingListReply.Ranking myRanking = 2;
  if (this->has_myranking()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::myranking(this), target, stream);
  }

  // repeated .yyb.RankingListReply.Ranking rankings = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_rankings_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_rankings(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.RankingListReply)
  return target;
}

size_t RankingListReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.RankingListReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .yyb.RankingListReply.Ranking rankings = 3;
  total_size += 1UL * this->_internal_rankings_size();
  for (const auto& msg : this->rankings_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .yyb.RankingListReply.Ranking myRanking = 2;
  if (this->has_myranking()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *myranking_);
  }

  // .yyb.ERROR_CODE error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_error());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RankingListReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.RankingListReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RankingListReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RankingListReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.RankingListReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.RankingListReply)
    MergeFrom(*source);
  }
}

void RankingListReply::MergeFrom(const RankingListReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.RankingListReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rankings_.MergeFrom(from.rankings_);
  if (from.has_myranking()) {
    _internal_mutable_myranking()->::yyb::RankingListReply_Ranking::MergeFrom(from._internal_myranking());
  }
  if (from.error() != 0) {
    _internal_set_error(from._internal_error());
  }
}

void RankingListReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.RankingListReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankingListReply::CopyFrom(const RankingListReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.RankingListReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankingListReply::IsInitialized() const {
  return true;
}

void RankingListReply::InternalSwap(RankingListReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  rankings_.InternalSwap(&other->rankings_);
  swap(myranking_, other->myranking_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RankingListReply::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace yyb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::yyb::RpcServiceExampleRequest* Arena::CreateMaybeMessage< ::yyb::RpcServiceExampleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::RpcServiceExampleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::RpcServiceExampleReply* Arena::CreateMaybeMessage< ::yyb::RpcServiceExampleReply >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::RpcServiceExampleReply >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::Empty* Arena::CreateMaybeMessage< ::yyb::Empty >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::Empty >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::PushNotification* Arena::CreateMaybeMessage< ::yyb::PushNotification >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::PushNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::LoginRequest* Arena::CreateMaybeMessage< ::yyb::LoginRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::LoginRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::LoginReply* Arena::CreateMaybeMessage< ::yyb::LoginReply >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::LoginReply >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::Item* Arena::CreateMaybeMessage< ::yyb::Item >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::Item >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::Mercenary* Arena::CreateMaybeMessage< ::yyb::Mercenary >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::Mercenary >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::Stage* Arena::CreateMaybeMessage< ::yyb::Stage >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::Stage >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::UpgradePlayer* Arena::CreateMaybeMessage< ::yyb::UpgradePlayer >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::UpgradePlayer >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::GameDataRequest* Arena::CreateMaybeMessage< ::yyb::GameDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::GameDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::GameDataReply* Arena::CreateMaybeMessage< ::yyb::GameDataReply >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::GameDataReply >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::RankingRequest* Arena::CreateMaybeMessage< ::yyb::RankingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::RankingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::RankingReply* Arena::CreateMaybeMessage< ::yyb::RankingReply >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::RankingReply >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::RankingListRequest* Arena::CreateMaybeMessage< ::yyb::RankingListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::RankingListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::RankingListReply_Ranking* Arena::CreateMaybeMessage< ::yyb::RankingListReply_Ranking >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::RankingListReply_Ranking >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::RankingListReply* Arena::CreateMaybeMessage< ::yyb::RankingListReply >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::RankingListReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
