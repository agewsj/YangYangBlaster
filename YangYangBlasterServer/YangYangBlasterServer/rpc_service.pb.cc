// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc_service.proto

#include "rpc_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace yyb {
class RpcServiceExampleRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RpcServiceExampleRequest> _instance;
} _RpcServiceExampleRequest_default_instance_;
class RpcServiceExampleReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RpcServiceExampleReply> _instance;
} _RpcServiceExampleReply_default_instance_;
class EmptyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Empty> _instance;
} _Empty_default_instance_;
class PushNotificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PushNotification> _instance;
} _PushNotification_default_instance_;
class LoginRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoginRequest> _instance;
} _LoginRequest_default_instance_;
class LoginReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoginReply> _instance;
} _LoginReply_default_instance_;
}  // namespace yyb
static void InitDefaultsscc_info_Empty_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_Empty_default_instance_;
    new (ptr) ::yyb::Empty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::Empty::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Empty_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Empty_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_LoginReply_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_LoginReply_default_instance_;
    new (ptr) ::yyb::LoginReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::LoginReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoginReply_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoginReply_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_LoginRequest_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_LoginRequest_default_instance_;
    new (ptr) ::yyb::LoginRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::LoginRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoginRequest_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoginRequest_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_PushNotification_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_PushNotification_default_instance_;
    new (ptr) ::yyb::PushNotification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::PushNotification::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PushNotification_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PushNotification_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RpcServiceExampleReply_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_RpcServiceExampleReply_default_instance_;
    new (ptr) ::yyb::RpcServiceExampleReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::RpcServiceExampleReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RpcServiceExampleReply_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RpcServiceExampleReply_rpc_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RpcServiceExampleRequest_rpc_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yyb::_RpcServiceExampleRequest_default_instance_;
    new (ptr) ::yyb::RpcServiceExampleRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yyb::RpcServiceExampleRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RpcServiceExampleRequest_rpc_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RpcServiceExampleRequest_rpc_5fservice_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_rpc_5fservice_2eproto[6];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_rpc_5fservice_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_rpc_5fservice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_rpc_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::RpcServiceExampleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::RpcServiceExampleRequest, arg1_),
  PROTOBUF_FIELD_OFFSET(::yyb::RpcServiceExampleRequest, arg2_),
  PROTOBUF_FIELD_OFFSET(::yyb::RpcServiceExampleRequest, arg3_),
  PROTOBUF_FIELD_OFFSET(::yyb::RpcServiceExampleRequest, arg4_),
  PROTOBUF_FIELD_OFFSET(::yyb::RpcServiceExampleRequest, arg5_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::RpcServiceExampleReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::RpcServiceExampleReply, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::PushNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::PushNotification, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::LoginRequest, logintype_),
  PROTOBUF_FIELD_OFFSET(::yyb::LoginRequest, loginkey_),
  PROTOBUF_FIELD_OFFSET(::yyb::LoginRequest, idtoken_),
  PROTOBUF_FIELD_OFFSET(::yyb::LoginRequest, nickname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yyb::LoginReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yyb::LoginReply, error_),
  PROTOBUF_FIELD_OFFSET(::yyb::LoginReply, usn_),
  PROTOBUF_FIELD_OFFSET(::yyb::LoginReply, loginkey_),
  PROTOBUF_FIELD_OFFSET(::yyb::LoginReply, nickname_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::yyb::RpcServiceExampleRequest)},
  { 10, -1, sizeof(::yyb::RpcServiceExampleReply)},
  { 16, -1, sizeof(::yyb::Empty)},
  { 21, -1, sizeof(::yyb::PushNotification)},
  { 27, -1, sizeof(::yyb::LoginRequest)},
  { 36, -1, sizeof(::yyb::LoginReply)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_RpcServiceExampleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_RpcServiceExampleReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_Empty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_PushNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_LoginRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yyb::_LoginReply_default_instance_),
};

const char descriptor_table_protodef_rpc_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021rpc_service.proto\022\003yyb\"`\n\030RpcServiceEx"
  "ampleRequest\022\014\n\004arg1\030\001 \001(\005\022\014\n\004arg2\030\002 \001(\002"
  "\022\014\n\004arg3\030\003 \001(\t\022\014\n\004arg4\030\004 \001(\010\022\014\n\004arg5\030\005 \003"
  "(\005\"\'\n\026RpcServiceExampleReply\022\r\n\005error\030\001 "
  "\001(\t\"\007\n\005Empty\"#\n\020PushNotification\022\017\n\007payl"
  "oad\030\001 \001(\t\"\313\001\n\014LoginRequest\022/\n\tloginType\030"
  "\001 \001(\0162\034.yyb.LoginRequest.LOGIN_TYPE\022\020\n\010l"
  "oginKey\030\002 \001(\t\022\017\n\007idToken\030\003 \001(\t\022\020\n\010nickNa"
  "me\030\004 \001(\t\"U\n\nLOGIN_TYPE\022\027\n\023LOGIN_TYPE_NON"
  "_CERT\020\000\022\025\n\021LOGIN_TYPE_GOOGLE\020\001\022\027\n\023LOGIN_"
  "TYPE_FACEBOOK\020\002\"\213\003\n\nLoginReply\022)\n\005error\030"
  "\001 \001(\0162\032.yyb.LoginReply.ERROR_CODE\022\013\n\003usn"
  "\030\002 \001(\005\022\020\n\010loginKey\030\003 \001(\t\022\020\n\010nickName\030\004 \001"
  "(\t\"\240\002\n\nERROR_CODE\022\021\n\rERROR_CODE_OK\020\000\022\035\n\031"
  "ERROR_CODE_EMPTY_NICKNAME\020\001\022\033\n\027ERROR_COD"
  "E_DUP_NICKNAME\020\002\022/\n+ERROR_CODE_NICKNAME_"
  "HAVE_SPECIAL_CHARACTERS\020\003\022$\n ERROR_CODE_"
  "UNABLE_TO_CREATE_USER\020\004\022*\n&ERROR_CODE_FA"
  "ILED_TO_ACQUIRE_USER_INFO\020\005\022!\n\035ERROR_COD"
  "E_GOOGLE_AUTH_FAILED\020\006\022\035\n\031ERROR_CODE_EMP"
  "TY_ID_TOKEN\020\0072\277\001\n\nRpcService\022Q\n\021RpcServi"
  "ceExample\022\035.yyb.RpcServiceExampleRequest"
  "\032\033.yyb.RpcServiceExampleReply\"\000\022/\n\006Liste"
  "n\022\n.yyb.Empty\032\025.yyb.PushNotification\"\0000\001"
  "\022-\n\005Login\022\021.yyb.LoginRequest\032\017.yyb.Login"
  "Reply\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_rpc_5fservice_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_rpc_5fservice_2eproto_sccs[6] = {
  &scc_info_Empty_rpc_5fservice_2eproto.base,
  &scc_info_LoginReply_rpc_5fservice_2eproto.base,
  &scc_info_LoginRequest_rpc_5fservice_2eproto.base,
  &scc_info_PushNotification_rpc_5fservice_2eproto.base,
  &scc_info_RpcServiceExampleReply_rpc_5fservice_2eproto.base,
  &scc_info_RpcServiceExampleRequest_rpc_5fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_rpc_5fservice_2eproto_once;
static bool descriptor_table_rpc_5fservice_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_rpc_5fservice_2eproto = {
  &descriptor_table_rpc_5fservice_2eproto_initialized, descriptor_table_protodef_rpc_5fservice_2eproto, "rpc_service.proto", 1015,
  &descriptor_table_rpc_5fservice_2eproto_once, descriptor_table_rpc_5fservice_2eproto_sccs, descriptor_table_rpc_5fservice_2eproto_deps, 6, 0,
  schemas, file_default_instances, TableStruct_rpc_5fservice_2eproto::offsets,
  file_level_metadata_rpc_5fservice_2eproto, 6, file_level_enum_descriptors_rpc_5fservice_2eproto, file_level_service_descriptors_rpc_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_rpc_5fservice_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_rpc_5fservice_2eproto), true);
namespace yyb {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LoginRequest_LOGIN_TYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_rpc_5fservice_2eproto);
  return file_level_enum_descriptors_rpc_5fservice_2eproto[0];
}
bool LoginRequest_LOGIN_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr LoginRequest_LOGIN_TYPE LoginRequest::LOGIN_TYPE_NON_CERT;
constexpr LoginRequest_LOGIN_TYPE LoginRequest::LOGIN_TYPE_GOOGLE;
constexpr LoginRequest_LOGIN_TYPE LoginRequest::LOGIN_TYPE_FACEBOOK;
constexpr LoginRequest_LOGIN_TYPE LoginRequest::LOGIN_TYPE_MIN;
constexpr LoginRequest_LOGIN_TYPE LoginRequest::LOGIN_TYPE_MAX;
constexpr int LoginRequest::LOGIN_TYPE_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LoginReply_ERROR_CODE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_rpc_5fservice_2eproto);
  return file_level_enum_descriptors_rpc_5fservice_2eproto[1];
}
bool LoginReply_ERROR_CODE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr LoginReply_ERROR_CODE LoginReply::ERROR_CODE_OK;
constexpr LoginReply_ERROR_CODE LoginReply::ERROR_CODE_EMPTY_NICKNAME;
constexpr LoginReply_ERROR_CODE LoginReply::ERROR_CODE_DUP_NICKNAME;
constexpr LoginReply_ERROR_CODE LoginReply::ERROR_CODE_NICKNAME_HAVE_SPECIAL_CHARACTERS;
constexpr LoginReply_ERROR_CODE LoginReply::ERROR_CODE_UNABLE_TO_CREATE_USER;
constexpr LoginReply_ERROR_CODE LoginReply::ERROR_CODE_FAILED_TO_ACQUIRE_USER_INFO;
constexpr LoginReply_ERROR_CODE LoginReply::ERROR_CODE_GOOGLE_AUTH_FAILED;
constexpr LoginReply_ERROR_CODE LoginReply::ERROR_CODE_EMPTY_ID_TOKEN;
constexpr LoginReply_ERROR_CODE LoginReply::ERROR_CODE_MIN;
constexpr LoginReply_ERROR_CODE LoginReply::ERROR_CODE_MAX;
constexpr int LoginReply::ERROR_CODE_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void RpcServiceExampleRequest::InitAsDefaultInstance() {
}
class RpcServiceExampleRequest::_Internal {
 public:
};

RpcServiceExampleRequest::RpcServiceExampleRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.RpcServiceExampleRequest)
}
RpcServiceExampleRequest::RpcServiceExampleRequest(const RpcServiceExampleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      arg5_(from.arg5_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  arg3_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_arg3().empty()) {
    arg3_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.arg3_);
  }
  ::memcpy(&arg1_, &from.arg1_,
    static_cast<size_t>(reinterpret_cast<char*>(&arg4_) -
    reinterpret_cast<char*>(&arg1_)) + sizeof(arg4_));
  // @@protoc_insertion_point(copy_constructor:yyb.RpcServiceExampleRequest)
}

void RpcServiceExampleRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RpcServiceExampleRequest_rpc_5fservice_2eproto.base);
  arg3_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&arg1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&arg4_) -
      reinterpret_cast<char*>(&arg1_)) + sizeof(arg4_));
}

RpcServiceExampleRequest::~RpcServiceExampleRequest() {
  // @@protoc_insertion_point(destructor:yyb.RpcServiceExampleRequest)
  SharedDtor();
}

void RpcServiceExampleRequest::SharedDtor() {
  arg3_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RpcServiceExampleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RpcServiceExampleRequest& RpcServiceExampleRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RpcServiceExampleRequest_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RpcServiceExampleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.RpcServiceExampleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arg5_.Clear();
  arg3_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&arg1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&arg4_) -
      reinterpret_cast<char*>(&arg1_)) + sizeof(arg4_));
  _internal_metadata_.Clear();
}

const char* RpcServiceExampleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 arg1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          arg1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float arg2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          arg2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // string arg3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_arg3();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.RpcServiceExampleRequest.arg3"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool arg4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          arg4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 arg5 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_arg5(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40) {
          _internal_add_arg5(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RpcServiceExampleRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.RpcServiceExampleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 arg1 = 1;
  if (this->arg1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_arg1(), target);
  }

  // float arg2 = 2;
  if (!(this->arg2() <= 0 && this->arg2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_arg2(), target);
  }

  // string arg3 = 3;
  if (this->arg3().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_arg3().data(), static_cast<int>(this->_internal_arg3().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.RpcServiceExampleRequest.arg3");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_arg3(), target);
  }

  // bool arg4 = 4;
  if (this->arg4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_arg4(), target);
  }

  // repeated int32 arg5 = 5;
  {
    int byte_size = _arg5_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          5, _internal_arg5(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.RpcServiceExampleRequest)
  return target;
}

size_t RpcServiceExampleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.RpcServiceExampleRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 arg5 = 5;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->arg5_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _arg5_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string arg3 = 3;
  if (this->arg3().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_arg3());
  }

  // int32 arg1 = 1;
  if (this->arg1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_arg1());
  }

  // float arg2 = 2;
  if (!(this->arg2() <= 0 && this->arg2() >= 0)) {
    total_size += 1 + 4;
  }

  // bool arg4 = 4;
  if (this->arg4() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RpcServiceExampleRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.RpcServiceExampleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RpcServiceExampleRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RpcServiceExampleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.RpcServiceExampleRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.RpcServiceExampleRequest)
    MergeFrom(*source);
  }
}

void RpcServiceExampleRequest::MergeFrom(const RpcServiceExampleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.RpcServiceExampleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arg5_.MergeFrom(from.arg5_);
  if (from.arg3().size() > 0) {

    arg3_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.arg3_);
  }
  if (from.arg1() != 0) {
    _internal_set_arg1(from._internal_arg1());
  }
  if (!(from.arg2() <= 0 && from.arg2() >= 0)) {
    _internal_set_arg2(from._internal_arg2());
  }
  if (from.arg4() != 0) {
    _internal_set_arg4(from._internal_arg4());
  }
}

void RpcServiceExampleRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.RpcServiceExampleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcServiceExampleRequest::CopyFrom(const RpcServiceExampleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.RpcServiceExampleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcServiceExampleRequest::IsInitialized() const {
  return true;
}

void RpcServiceExampleRequest::InternalSwap(RpcServiceExampleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  arg5_.InternalSwap(&other->arg5_);
  arg3_.Swap(&other->arg3_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(arg1_, other->arg1_);
  swap(arg2_, other->arg2_);
  swap(arg4_, other->arg4_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RpcServiceExampleRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RpcServiceExampleReply::InitAsDefaultInstance() {
}
class RpcServiceExampleReply::_Internal {
 public:
};

RpcServiceExampleReply::RpcServiceExampleReply()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.RpcServiceExampleReply)
}
RpcServiceExampleReply::RpcServiceExampleReply(const RpcServiceExampleReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error().empty()) {
    error_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  // @@protoc_insertion_point(copy_constructor:yyb.RpcServiceExampleReply)
}

void RpcServiceExampleReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RpcServiceExampleReply_rpc_5fservice_2eproto.base);
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RpcServiceExampleReply::~RpcServiceExampleReply() {
  // @@protoc_insertion_point(destructor:yyb.RpcServiceExampleReply)
  SharedDtor();
}

void RpcServiceExampleReply::SharedDtor() {
  error_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RpcServiceExampleReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RpcServiceExampleReply& RpcServiceExampleReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RpcServiceExampleReply_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RpcServiceExampleReply::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.RpcServiceExampleReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* RpcServiceExampleReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_error();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.RpcServiceExampleReply.error"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RpcServiceExampleReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.RpcServiceExampleReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string error = 1;
  if (this->error().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.RpcServiceExampleReply.error");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.RpcServiceExampleReply)
  return target;
}

size_t RpcServiceExampleReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.RpcServiceExampleReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error = 1;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RpcServiceExampleReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.RpcServiceExampleReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RpcServiceExampleReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RpcServiceExampleReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.RpcServiceExampleReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.RpcServiceExampleReply)
    MergeFrom(*source);
  }
}

void RpcServiceExampleReply::MergeFrom(const RpcServiceExampleReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.RpcServiceExampleReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void RpcServiceExampleReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.RpcServiceExampleReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcServiceExampleReply::CopyFrom(const RpcServiceExampleReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.RpcServiceExampleReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcServiceExampleReply::IsInitialized() const {
  return true;
}

void RpcServiceExampleReply::InternalSwap(RpcServiceExampleReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  error_.Swap(&other->error_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata RpcServiceExampleReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
class Empty::_Internal {
 public:
};

Empty::Empty()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.Empty)
}
Empty::Empty(const Empty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:yyb.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:yyb.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Empty& Empty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Empty_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Empty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Empty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.Empty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Empty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.Empty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Empty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PushNotification::InitAsDefaultInstance() {
}
class PushNotification::_Internal {
 public:
};

PushNotification::PushNotification()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.PushNotification)
}
PushNotification::PushNotification(const PushNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payload().empty()) {
    payload_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  // @@protoc_insertion_point(copy_constructor:yyb.PushNotification)
}

void PushNotification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PushNotification_rpc_5fservice_2eproto.base);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PushNotification::~PushNotification() {
  // @@protoc_insertion_point(destructor:yyb.PushNotification)
  SharedDtor();
}

void PushNotification::SharedDtor() {
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PushNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PushNotification& PushNotification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PushNotification_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void PushNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.PushNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* PushNotification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string payload = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.PushNotification.payload"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PushNotification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.PushNotification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string payload = 1;
  if (this->payload().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payload().data(), static_cast<int>(this->_internal_payload().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.PushNotification.payload");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_payload(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.PushNotification)
  return target;
}

size_t PushNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.PushNotification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payload = 1;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payload());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PushNotification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.PushNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const PushNotification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PushNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.PushNotification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.PushNotification)
    MergeFrom(*source);
  }
}

void PushNotification::MergeFrom(const PushNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.PushNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
}

void PushNotification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.PushNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushNotification::CopyFrom(const PushNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.PushNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushNotification::IsInitialized() const {
  return true;
}

void PushNotification::InternalSwap(PushNotification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  payload_.Swap(&other->payload_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata PushNotification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoginRequest::InitAsDefaultInstance() {
}
class LoginRequest::_Internal {
 public:
};

LoginRequest::LoginRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.LoginRequest)
}
LoginRequest::LoginRequest(const LoginRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  loginkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_loginkey().empty()) {
    loginkey_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.loginkey_);
  }
  idtoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_idtoken().empty()) {
    idtoken_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.idtoken_);
  }
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nickname().empty()) {
    nickname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  logintype_ = from.logintype_;
  // @@protoc_insertion_point(copy_constructor:yyb.LoginRequest)
}

void LoginRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoginRequest_rpc_5fservice_2eproto.base);
  loginkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  idtoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  logintype_ = 0;
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:yyb.LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  loginkey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  idtoken_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LoginRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginRequest& LoginRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoginRequest_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.LoginRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  loginkey_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  idtoken_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nickname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  logintype_ = 0;
  _internal_metadata_.Clear();
}

const char* LoginRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .yyb.LoginRequest.LOGIN_TYPE loginType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_logintype(static_cast<::yyb::LoginRequest_LOGIN_TYPE>(val));
        } else goto handle_unusual;
        continue;
      // string loginKey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_loginkey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.LoginRequest.loginKey"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string idToken = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_idtoken();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.LoginRequest.idToken"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string nickName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_nickname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.LoginRequest.nickName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoginRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.LoginRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yyb.LoginRequest.LOGIN_TYPE loginType = 1;
  if (this->logintype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_logintype(), target);
  }

  // string loginKey = 2;
  if (this->loginkey().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_loginkey().data(), static_cast<int>(this->_internal_loginkey().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.LoginRequest.loginKey");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_loginkey(), target);
  }

  // string idToken = 3;
  if (this->idtoken().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_idtoken().data(), static_cast<int>(this->_internal_idtoken().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.LoginRequest.idToken");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_idtoken(), target);
  }

  // string nickName = 4;
  if (this->nickname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.LoginRequest.nickName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_nickname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.LoginRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string loginKey = 2;
  if (this->loginkey().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_loginkey());
  }

  // string idToken = 3;
  if (this->idtoken().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_idtoken());
  }

  // string nickName = 4;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // .yyb.LoginRequest.LOGIN_TYPE loginType = 1;
  if (this->logintype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_logintype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoginRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.LoginRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.LoginRequest)
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.loginkey().size() > 0) {

    loginkey_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.loginkey_);
  }
  if (from.idtoken().size() > 0) {

    idtoken_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.idtoken_);
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.logintype() != 0) {
    _internal_set_logintype(from._internal_logintype());
  }
}

void LoginRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  return true;
}

void LoginRequest::InternalSwap(LoginRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  loginkey_.Swap(&other->loginkey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  idtoken_.Swap(&other->idtoken_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nickname_.Swap(&other->nickname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(logintype_, other->logintype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoginReply::InitAsDefaultInstance() {
}
class LoginReply::_Internal {
 public:
};

LoginReply::LoginReply()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yyb.LoginReply)
}
LoginReply::LoginReply(const LoginReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  loginkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_loginkey().empty()) {
    loginkey_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.loginkey_);
  }
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nickname().empty()) {
    nickname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&usn_) -
    reinterpret_cast<char*>(&error_)) + sizeof(usn_));
  // @@protoc_insertion_point(copy_constructor:yyb.LoginReply)
}

void LoginReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoginReply_rpc_5fservice_2eproto.base);
  loginkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usn_) -
      reinterpret_cast<char*>(&error_)) + sizeof(usn_));
}

LoginReply::~LoginReply() {
  // @@protoc_insertion_point(destructor:yyb.LoginReply)
  SharedDtor();
}

void LoginReply::SharedDtor() {
  loginkey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LoginReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginReply& LoginReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoginReply_rpc_5fservice_2eproto.base);
  return *internal_default_instance();
}


void LoginReply::Clear() {
// @@protoc_insertion_point(message_clear_start:yyb.LoginReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  loginkey_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nickname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usn_) -
      reinterpret_cast<char*>(&error_)) + sizeof(usn_));
  _internal_metadata_.Clear();
}

const char* LoginReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .yyb.LoginReply.ERROR_CODE error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_error(static_cast<::yyb::LoginReply_ERROR_CODE>(val));
        } else goto handle_unusual;
        continue;
      // int32 usn = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          usn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string loginKey = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_loginkey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.LoginReply.loginKey"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string nickName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_nickname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yyb.LoginReply.nickName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoginReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yyb.LoginReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yyb.LoginReply.ERROR_CODE error = 1;
  if (this->error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_error(), target);
  }

  // int32 usn = 2;
  if (this->usn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_usn(), target);
  }

  // string loginKey = 3;
  if (this->loginkey().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_loginkey().data(), static_cast<int>(this->_internal_loginkey().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.LoginReply.loginKey");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_loginkey(), target);
  }

  // string nickName = 4;
  if (this->nickname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yyb.LoginReply.nickName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_nickname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yyb.LoginReply)
  return target;
}

size_t LoginReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yyb.LoginReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string loginKey = 3;
  if (this->loginkey().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_loginkey());
  }

  // string nickName = 4;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // .yyb.LoginReply.ERROR_CODE error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_error());
  }

  // int32 usn = 2;
  if (this->usn() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_usn());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yyb.LoginReply)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoginReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yyb.LoginReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yyb.LoginReply)
    MergeFrom(*source);
  }
}

void LoginReply::MergeFrom(const LoginReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yyb.LoginReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.loginkey().size() > 0) {

    loginkey_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.loginkey_);
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.error() != 0) {
    _internal_set_error(from._internal_error());
  }
  if (from.usn() != 0) {
    _internal_set_usn(from._internal_usn());
  }
}

void LoginReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yyb.LoginReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReply::CopyFrom(const LoginReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yyb.LoginReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReply::IsInitialized() const {
  return true;
}

void LoginReply::InternalSwap(LoginReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  loginkey_.Swap(&other->loginkey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nickname_.Swap(&other->nickname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  swap(usn_, other->usn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginReply::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace yyb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::yyb::RpcServiceExampleRequest* Arena::CreateMaybeMessage< ::yyb::RpcServiceExampleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::RpcServiceExampleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::RpcServiceExampleReply* Arena::CreateMaybeMessage< ::yyb::RpcServiceExampleReply >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::RpcServiceExampleReply >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::Empty* Arena::CreateMaybeMessage< ::yyb::Empty >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::Empty >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::PushNotification* Arena::CreateMaybeMessage< ::yyb::PushNotification >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::PushNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::LoginRequest* Arena::CreateMaybeMessage< ::yyb::LoginRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::LoginRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yyb::LoginReply* Arena::CreateMaybeMessage< ::yyb::LoginReply >(Arena* arena) {
  return Arena::CreateInternal< ::yyb::LoginReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
